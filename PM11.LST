Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-1


       1				Comment | 
       2				Laboratorium Oprogramowania Systemowego
					 
       3				Cwiczenie 1 - r.ak. 2001/2002 
       4				 
       5				Program przykladowy do testowania trybu
					 chronionego procesora Pentium 
       6				wersja 2.0 - marzec 2000 
       7				| 
       8				 
       9				.386p 
      10 = 000D				CR         EQU     0DH 
      11 = 000A				LF         EQU     0AH 
      12				 
      13				;--------------------------------------
					----------------------------------- 
      14				 
      15				; globalna tablica deskryptor�w 
      16 0000				segment_GDT    SEGMENT     use16 
      17 0000  0000000000000000		           dq      0       ; poz. 0 - d
					eskryptor zerowy (nieuzywany) 
      18 0008  0000000000000000		           dq      0       ; poz. 1 - s
					elektor 0008H 
      19 0010  0000000000000000		           dq      0       ; poz. 2 - s
					elektor 0010H - segment 'nowe_dane' 
      20 0018  0000000000000000		           dq      0       ; poz. 3 - s
					elektor 0018H 
      21 0020  0000000000000000		           dq      0       ; poz. 4 - s
					elektor 0020H 
      22 0028  0000000000000000		           dq      0       ; poz. 5 - s
					elektor 0028H 
      23 0030  0000000000000000		           dq      0       ; poz. 6 - s
					elektor 0030H 
      24 0038  0000000000000000		           dq      0       ; poz. 7 - s
					elektor 0038H 
      25 0040  0000000000000000		           dq      0       ; poz. 8 - s
					elektor 0040H 
      26 0048  0000000000000000		           dq      0       ; poz. 9 - s
					elektor 0048H 
      27 0050  0000000000000000		           dq      0       ; poz.10 - s
					elektor 0050H 
      28				 
      29 0058				segment_GDT_end    LABEL   byte 
      30 0058				segment_GDT    ENDS 
      31				 
      32				;--------------------------------------
					----------------------------- 
      33				 
      34				; tablica deskryptorow przerwan 
      35 0000				segment_IDT   SEGMENT use16 
      36				 
      37				; Tablica zawiera furtki prowadz?ce do 
					procedur obs?ugi przerwa� 
      38				; i wyj?tk�w o numerach 0 - 127. Pola
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-2


					 'offset' w kolejnych furtkach 
      39				; zawierac beda liczby 0, 7, 14, 21, it
					d. 
      40				 
      41 = 0000				xpom=0 
      42				           REPT    128 
      43				           dw      xpom        ; offset
					 
      44				           dw      6 SHL 3     ; selekt
					or 
      45				           db      0           ; liczni
					k 
      46				           db      10000110B   ; bajt d
					ost?pu 
      47				           dw      0           ; rezerw
					a 
      48				xpom=xpom+7 
      49				           ENDM 
      50 0000  0000                  1	           dw      xpom        ; offset
					 
      51 0002  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      52 0004  00                    1	           db      0           ; liczni
					k 
      53 0005  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      54 0006  0000                  1	           dw      0           ; rezerw
					a 
      55 0008  0007                  1	           dw      xpom        ; offset
					 
      56 000A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      57 000C  00                    1	           db      0           ; liczni
					k 
      58 000D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      59 000E  0000                  1	           dw      0           ; rezerw
					a 
      60 0010  000E                  1	           dw      xpom        ; offset
					 
      61 0012  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      62 0014  00                    1	           db      0           ; liczni
					k 
      63 0015  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      64 0016  0000                  1	           dw      0           ; rezerw
					a 
      65 0018  0015                  1	           dw      xpom        ; offset
					 
      66 001A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      67 001C  00                    1	           db      0           ; liczni
					k 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-3


      68 001D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      69 001E  0000                  1	           dw      0           ; rezerw
					a 
      70 0020  001C                  1	           dw      xpom        ; offset
					 
      71 0022  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      72 0024  00                    1	           db      0           ; liczni
					k 
      73 0025  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      74 0026  0000                  1	           dw      0           ; rezerw
					a 
      75 0028  0023                  1	           dw      xpom        ; offset
					 
      76 002A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      77 002C  00                    1	           db      0           ; liczni
					k 
      78 002D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      79 002E  0000                  1	           dw      0           ; rezerw
					a 
      80 0030  002A                  1	           dw      xpom        ; offset
					 
      81 0032  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      82 0034  00                    1	           db      0           ; liczni
					k 
      83 0035  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      84 0036  0000                  1	           dw      0           ; rezerw
					a 
      85 0038  0031                  1	           dw      xpom        ; offset
					 
      86 003A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      87 003C  00                    1	           db      0           ; liczni
					k 
      88 003D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      89 003E  0000                  1	           dw      0           ; rezerw
					a 
      90 0040  0038                  1	           dw      xpom        ; offset
					 
      91 0042  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      92 0044  00                    1	           db      0           ; liczni
					k 
      93 0045  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      94 0046  0000                  1	           dw      0           ; rezerw
					a 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-4


      95 0048  003F                  1	           dw      xpom        ; offset
					 
      96 004A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
      97 004C  00                    1	           db      0           ; liczni
					k 
      98 004D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
      99 004E  0000                  1	           dw      0           ; rezerw
					a 
     100 0050  0046                  1	           dw      xpom        ; offset
					 
     101 0052  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     102 0054  00                    1	           db      0           ; liczni
					k 
     103 0055  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     104 0056  0000                  1	           dw      0           ; rezerw
					a 
     105 0058  004D                  1	           dw      xpom        ; offset
					 
     106 005A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     107 005C  00                    1	           db      0           ; liczni
					k 
     108 005D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     109 005E  0000                  1	           dw      0           ; rezerw
					a 
     110 0060  0054                  1	           dw      xpom        ; offset
					 
     111 0062  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     112 0064  00                    1	           db      0           ; liczni
					k 
     113 0065  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     114 0066  0000                  1	           dw      0           ; rezerw
					a 
     115 0068  005B                  1	           dw      xpom        ; offset
					 
     116 006A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     117 006C  00                    1	           db      0           ; liczni
					k 
     118 006D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     119 006E  0000                  1	           dw      0           ; rezerw
					a 
     120 0070  0062                  1	           dw      xpom        ; offset
					 
     121 0072  0030                  1	           dw      6 SHL 3     ; selekt
					or 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-5


     122 0074  00                    1	           db      0           ; liczni
					k 
     123 0075  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     124 0076  0000                  1	           dw      0           ; rezerw
					a 
     125 0078  0069                  1	           dw      xpom        ; offset
					 
     126 007A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     127 007C  00                    1	           db      0           ; liczni
					k 
     128 007D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     129 007E  0000                  1	           dw      0           ; rezerw
					a 
     130 0080  0070                  1	           dw      xpom        ; offset
					 
     131 0082  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     132 0084  00                    1	           db      0           ; liczni
					k 
     133 0085  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     134 0086  0000                  1	           dw      0           ; rezerw
					a 
     135 0088  0077                  1	           dw      xpom        ; offset
					 
     136 008A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     137 008C  00                    1	           db      0           ; liczni
					k 
     138 008D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     139 008E  0000                  1	           dw      0           ; rezerw
					a 
     140 0090  007E                  1	           dw      xpom        ; offset
					 
     141 0092  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     142 0094  00                    1	           db      0           ; liczni
					k 
     143 0095  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     144 0096  0000                  1	           dw      0           ; rezerw
					a 
     145 0098  0085                  1	           dw      xpom        ; offset
					 
     146 009A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     147 009C  00                    1	           db      0           ; liczni
					k 
     148 009D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-6


     149 009E  0000                  1	           dw      0           ; rezerw
					a 
     150 00A0  008C                  1	           dw      xpom        ; offset
					 
     151 00A2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     152 00A4  00                    1	           db      0           ; liczni
					k 
     153 00A5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     154 00A6  0000                  1	           dw      0           ; rezerw
					a 
     155 00A8  0093                  1	           dw      xpom        ; offset
					 
     156 00AA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     157 00AC  00                    1	           db      0           ; liczni
					k 
     158 00AD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     159 00AE  0000                  1	           dw      0           ; rezerw
					a 
     160 00B0  009A                  1	           dw      xpom        ; offset
					 
     161 00B2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     162 00B4  00                    1	           db      0           ; liczni
					k 
     163 00B5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     164 00B6  0000                  1	           dw      0           ; rezerw
					a 
     165 00B8  00A1                  1	           dw      xpom        ; offset
					 
     166 00BA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     167 00BC  00                    1	           db      0           ; liczni
					k 
     168 00BD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     169 00BE  0000                  1	           dw      0           ; rezerw
					a 
     170 00C0  00A8                  1	           dw      xpom        ; offset
					 
     171 00C2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     172 00C4  00                    1	           db      0           ; liczni
					k 
     173 00C5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     174 00C6  0000                  1	           dw      0           ; rezerw
					a 
     175 00C8  00AF                  1	           dw      xpom        ; offset
					 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-7


     176 00CA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     177 00CC  00                    1	           db      0           ; liczni
					k 
     178 00CD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     179 00CE  0000                  1	           dw      0           ; rezerw
					a 
     180 00D0  00B6                  1	           dw      xpom        ; offset
					 
     181 00D2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     182 00D4  00                    1	           db      0           ; liczni
					k 
     183 00D5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     184 00D6  0000                  1	           dw      0           ; rezerw
					a 
     185 00D8  00BD                  1	           dw      xpom        ; offset
					 
     186 00DA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     187 00DC  00                    1	           db      0           ; liczni
					k 
     188 00DD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     189 00DE  0000                  1	           dw      0           ; rezerw
					a 
     190 00E0  00C4                  1	           dw      xpom        ; offset
					 
     191 00E2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     192 00E4  00                    1	           db      0           ; liczni
					k 
     193 00E5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     194 00E6  0000                  1	           dw      0           ; rezerw
					a 
     195 00E8  00CB                  1	           dw      xpom        ; offset
					 
     196 00EA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     197 00EC  00                    1	           db      0           ; liczni
					k 
     198 00ED  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     199 00EE  0000                  1	           dw      0           ; rezerw
					a 
     200 00F0  00D2                  1	           dw      xpom        ; offset
					 
     201 00F2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     202 00F4  00                    1	           db      0           ; liczni
					k 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-8


     203 00F5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     204 00F6  0000                  1	           dw      0           ; rezerw
					a 
     205 00F8  00D9                  1	           dw      xpom        ; offset
					 
     206 00FA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     207 00FC  00                    1	           db      0           ; liczni
					k 
     208 00FD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     209 00FE  0000                  1	           dw      0           ; rezerw
					a 
     210 0100  00E0                  1	           dw      xpom        ; offset
					 
     211 0102  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     212 0104  00                    1	           db      0           ; liczni
					k 
     213 0105  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     214 0106  0000                  1	           dw      0           ; rezerw
					a 
     215 0108  00E7                  1	           dw      xpom        ; offset
					 
     216 010A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     217 010C  00                    1	           db      0           ; liczni
					k 
     218 010D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     219 010E  0000                  1	           dw      0           ; rezerw
					a 
     220 0110  00EE                  1	           dw      xpom        ; offset
					 
     221 0112  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     222 0114  00                    1	           db      0           ; liczni
					k 
     223 0115  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     224 0116  0000                  1	           dw      0           ; rezerw
					a 
     225 0118  00F5                  1	           dw      xpom        ; offset
					 
     226 011A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     227 011C  00                    1	           db      0           ; liczni
					k 
     228 011D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     229 011E  0000                  1	           dw      0           ; rezerw
					a 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-9


     230 0120  00FC                  1	           dw      xpom        ; offset
					 
     231 0122  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     232 0124  00                    1	           db      0           ; liczni
					k 
     233 0125  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     234 0126  0000                  1	           dw      0           ; rezerw
					a 
     235 0128  0103                  1	           dw      xpom        ; offset
					 
     236 012A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     237 012C  00                    1	           db      0           ; liczni
					k 
     238 012D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     239 012E  0000                  1	           dw      0           ; rezerw
					a 
     240 0130  010A                  1	           dw      xpom        ; offset
					 
     241 0132  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     242 0134  00                    1	           db      0           ; liczni
					k 
     243 0135  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     244 0136  0000                  1	           dw      0           ; rezerw
					a 
     245 0138  0111                  1	           dw      xpom        ; offset
					 
     246 013A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     247 013C  00                    1	           db      0           ; liczni
					k 
     248 013D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     249 013E  0000                  1	           dw      0           ; rezerw
					a 
     250 0140  0118                  1	           dw      xpom        ; offset
					 
     251 0142  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     252 0144  00                    1	           db      0           ; liczni
					k 
     253 0145  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     254 0146  0000                  1	           dw      0           ; rezerw
					a 
     255 0148  011F                  1	           dw      xpom        ; offset
					 
     256 014A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-10


     257 014C  00                    1	           db      0           ; liczni
					k 
     258 014D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     259 014E  0000                  1	           dw      0           ; rezerw
					a 
     260 0150  0126                  1	           dw      xpom        ; offset
					 
     261 0152  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     262 0154  00                    1	           db      0           ; liczni
					k 
     263 0155  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     264 0156  0000                  1	           dw      0           ; rezerw
					a 
     265 0158  012D                  1	           dw      xpom        ; offset
					 
     266 015A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     267 015C  00                    1	           db      0           ; liczni
					k 
     268 015D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     269 015E  0000                  1	           dw      0           ; rezerw
					a 
     270 0160  0134                  1	           dw      xpom        ; offset
					 
     271 0162  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     272 0164  00                    1	           db      0           ; liczni
					k 
     273 0165  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     274 0166  0000                  1	           dw      0           ; rezerw
					a 
     275 0168  013B                  1	           dw      xpom        ; offset
					 
     276 016A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     277 016C  00                    1	           db      0           ; liczni
					k 
     278 016D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     279 016E  0000                  1	           dw      0           ; rezerw
					a 
     280 0170  0142                  1	           dw      xpom        ; offset
					 
     281 0172  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     282 0174  00                    1	           db      0           ; liczni
					k 
     283 0175  86                    1	           db      10000110B   ; bajt d
					ost?pu 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-11


     284 0176  0000                  1	           dw      0           ; rezerw
					a 
     285 0178  0149                  1	           dw      xpom        ; offset
					 
     286 017A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     287 017C  00                    1	           db      0           ; liczni
					k 
     288 017D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     289 017E  0000                  1	           dw      0           ; rezerw
					a 
     290 0180  0150                  1	           dw      xpom        ; offset
					 
     291 0182  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     292 0184  00                    1	           db      0           ; liczni
					k 
     293 0185  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     294 0186  0000                  1	           dw      0           ; rezerw
					a 
     295 0188  0157                  1	           dw      xpom        ; offset
					 
     296 018A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     297 018C  00                    1	           db      0           ; liczni
					k 
     298 018D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     299 018E  0000                  1	           dw      0           ; rezerw
					a 
     300 0190  015E                  1	           dw      xpom        ; offset
					 
     301 0192  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     302 0194  00                    1	           db      0           ; liczni
					k 
     303 0195  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     304 0196  0000                  1	           dw      0           ; rezerw
					a 
     305 0198  0165                  1	           dw      xpom        ; offset
					 
     306 019A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     307 019C  00                    1	           db      0           ; liczni
					k 
     308 019D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     309 019E  0000                  1	           dw      0           ; rezerw
					a 
     310 01A0  016C                  1	           dw      xpom        ; offset
					 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-12


     311 01A2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     312 01A4  00                    1	           db      0           ; liczni
					k 
     313 01A5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     314 01A6  0000                  1	           dw      0           ; rezerw
					a 
     315 01A8  0173                  1	           dw      xpom        ; offset
					 
     316 01AA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     317 01AC  00                    1	           db      0           ; liczni
					k 
     318 01AD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     319 01AE  0000                  1	           dw      0           ; rezerw
					a 
     320 01B0  017A                  1	           dw      xpom        ; offset
					 
     321 01B2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     322 01B4  00                    1	           db      0           ; liczni
					k 
     323 01B5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     324 01B6  0000                  1	           dw      0           ; rezerw
					a 
     325 01B8  0181                  1	           dw      xpom        ; offset
					 
     326 01BA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     327 01BC  00                    1	           db      0           ; liczni
					k 
     328 01BD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     329 01BE  0000                  1	           dw      0           ; rezerw
					a 
     330 01C0  0188                  1	           dw      xpom        ; offset
					 
     331 01C2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     332 01C4  00                    1	           db      0           ; liczni
					k 
     333 01C5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     334 01C6  0000                  1	           dw      0           ; rezerw
					a 
     335 01C8  018F                  1	           dw      xpom        ; offset
					 
     336 01CA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     337 01CC  00                    1	           db      0           ; liczni
					k 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-13


     338 01CD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     339 01CE  0000                  1	           dw      0           ; rezerw
					a 
     340 01D0  0196                  1	           dw      xpom        ; offset
					 
     341 01D2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     342 01D4  00                    1	           db      0           ; liczni
					k 
     343 01D5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     344 01D6  0000                  1	           dw      0           ; rezerw
					a 
     345 01D8  019D                  1	           dw      xpom        ; offset
					 
     346 01DA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     347 01DC  00                    1	           db      0           ; liczni
					k 
     348 01DD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     349 01DE  0000                  1	           dw      0           ; rezerw
					a 
     350 01E0  01A4                  1	           dw      xpom        ; offset
					 
     351 01E2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     352 01E4  00                    1	           db      0           ; liczni
					k 
     353 01E5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     354 01E6  0000                  1	           dw      0           ; rezerw
					a 
     355 01E8  01AB                  1	           dw      xpom        ; offset
					 
     356 01EA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     357 01EC  00                    1	           db      0           ; liczni
					k 
     358 01ED  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     359 01EE  0000                  1	           dw      0           ; rezerw
					a 
     360 01F0  01B2                  1	           dw      xpom        ; offset
					 
     361 01F2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     362 01F4  00                    1	           db      0           ; liczni
					k 
     363 01F5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     364 01F6  0000                  1	           dw      0           ; rezerw
					a 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-14


     365 01F8  01B9                  1	           dw      xpom        ; offset
					 
     366 01FA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     367 01FC  00                    1	           db      0           ; liczni
					k 
     368 01FD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     369 01FE  0000                  1	           dw      0           ; rezerw
					a 
     370 0200  01C0                  1	           dw      xpom        ; offset
					 
     371 0202  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     372 0204  00                    1	           db      0           ; liczni
					k 
     373 0205  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     374 0206  0000                  1	           dw      0           ; rezerw
					a 
     375 0208  01C7                  1	           dw      xpom        ; offset
					 
     376 020A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     377 020C  00                    1	           db      0           ; liczni
					k 
     378 020D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     379 020E  0000                  1	           dw      0           ; rezerw
					a 
     380 0210  01CE                  1	           dw      xpom        ; offset
					 
     381 0212  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     382 0214  00                    1	           db      0           ; liczni
					k 
     383 0215  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     384 0216  0000                  1	           dw      0           ; rezerw
					a 
     385 0218  01D5                  1	           dw      xpom        ; offset
					 
     386 021A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     387 021C  00                    1	           db      0           ; liczni
					k 
     388 021D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     389 021E  0000                  1	           dw      0           ; rezerw
					a 
     390 0220  01DC                  1	           dw      xpom        ; offset
					 
     391 0222  0030                  1	           dw      6 SHL 3     ; selekt
					or 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-15


     392 0224  00                    1	           db      0           ; liczni
					k 
     393 0225  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     394 0226  0000                  1	           dw      0           ; rezerw
					a 
     395 0228  01E3                  1	           dw      xpom        ; offset
					 
     396 022A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     397 022C  00                    1	           db      0           ; liczni
					k 
     398 022D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     399 022E  0000                  1	           dw      0           ; rezerw
					a 
     400 0230  01EA                  1	           dw      xpom        ; offset
					 
     401 0232  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     402 0234  00                    1	           db      0           ; liczni
					k 
     403 0235  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     404 0236  0000                  1	           dw      0           ; rezerw
					a 
     405 0238  01F1                  1	           dw      xpom        ; offset
					 
     406 023A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     407 023C  00                    1	           db      0           ; liczni
					k 
     408 023D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     409 023E  0000                  1	           dw      0           ; rezerw
					a 
     410 0240  01F8                  1	           dw      xpom        ; offset
					 
     411 0242  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     412 0244  00                    1	           db      0           ; liczni
					k 
     413 0245  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     414 0246  0000                  1	           dw      0           ; rezerw
					a 
     415 0248  01FF                  1	           dw      xpom        ; offset
					 
     416 024A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     417 024C  00                    1	           db      0           ; liczni
					k 
     418 024D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-16


     419 024E  0000                  1	           dw      0           ; rezerw
					a 
     420 0250  0206                  1	           dw      xpom        ; offset
					 
     421 0252  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     422 0254  00                    1	           db      0           ; liczni
					k 
     423 0255  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     424 0256  0000                  1	           dw      0           ; rezerw
					a 
     425 0258  020D                  1	           dw      xpom        ; offset
					 
     426 025A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     427 025C  00                    1	           db      0           ; liczni
					k 
     428 025D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     429 025E  0000                  1	           dw      0           ; rezerw
					a 
     430 0260  0214                  1	           dw      xpom        ; offset
					 
     431 0262  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     432 0264  00                    1	           db      0           ; liczni
					k 
     433 0265  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     434 0266  0000                  1	           dw      0           ; rezerw
					a 
     435 0268  021B                  1	           dw      xpom        ; offset
					 
     436 026A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     437 026C  00                    1	           db      0           ; liczni
					k 
     438 026D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     439 026E  0000                  1	           dw      0           ; rezerw
					a 
     440 0270  0222                  1	           dw      xpom        ; offset
					 
     441 0272  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     442 0274  00                    1	           db      0           ; liczni
					k 
     443 0275  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     444 0276  0000                  1	           dw      0           ; rezerw
					a 
     445 0278  0229                  1	           dw      xpom        ; offset
					 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-17


     446 027A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     447 027C  00                    1	           db      0           ; liczni
					k 
     448 027D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     449 027E  0000                  1	           dw      0           ; rezerw
					a 
     450 0280  0230                  1	           dw      xpom        ; offset
					 
     451 0282  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     452 0284  00                    1	           db      0           ; liczni
					k 
     453 0285  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     454 0286  0000                  1	           dw      0           ; rezerw
					a 
     455 0288  0237                  1	           dw      xpom        ; offset
					 
     456 028A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     457 028C  00                    1	           db      0           ; liczni
					k 
     458 028D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     459 028E  0000                  1	           dw      0           ; rezerw
					a 
     460 0290  023E                  1	           dw      xpom        ; offset
					 
     461 0292  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     462 0294  00                    1	           db      0           ; liczni
					k 
     463 0295  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     464 0296  0000                  1	           dw      0           ; rezerw
					a 
     465 0298  0245                  1	           dw      xpom        ; offset
					 
     466 029A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     467 029C  00                    1	           db      0           ; liczni
					k 
     468 029D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     469 029E  0000                  1	           dw      0           ; rezerw
					a 
     470 02A0  024C                  1	           dw      xpom        ; offset
					 
     471 02A2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     472 02A4  00                    1	           db      0           ; liczni
					k 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-18


     473 02A5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     474 02A6  0000                  1	           dw      0           ; rezerw
					a 
     475 02A8  0253                  1	           dw      xpom        ; offset
					 
     476 02AA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     477 02AC  00                    1	           db      0           ; liczni
					k 
     478 02AD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     479 02AE  0000                  1	           dw      0           ; rezerw
					a 
     480 02B0  025A                  1	           dw      xpom        ; offset
					 
     481 02B2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     482 02B4  00                    1	           db      0           ; liczni
					k 
     483 02B5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     484 02B6  0000                  1	           dw      0           ; rezerw
					a 
     485 02B8  0261                  1	           dw      xpom        ; offset
					 
     486 02BA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     487 02BC  00                    1	           db      0           ; liczni
					k 
     488 02BD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     489 02BE  0000                  1	           dw      0           ; rezerw
					a 
     490 02C0  0268                  1	           dw      xpom        ; offset
					 
     491 02C2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     492 02C4  00                    1	           db      0           ; liczni
					k 
     493 02C5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     494 02C6  0000                  1	           dw      0           ; rezerw
					a 
     495 02C8  026F                  1	           dw      xpom        ; offset
					 
     496 02CA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     497 02CC  00                    1	           db      0           ; liczni
					k 
     498 02CD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     499 02CE  0000                  1	           dw      0           ; rezerw
					a 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-19


     500 02D0  0276                  1	           dw      xpom        ; offset
					 
     501 02D2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     502 02D4  00                    1	           db      0           ; liczni
					k 
     503 02D5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     504 02D6  0000                  1	           dw      0           ; rezerw
					a 
     505 02D8  027D                  1	           dw      xpom        ; offset
					 
     506 02DA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     507 02DC  00                    1	           db      0           ; liczni
					k 
     508 02DD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     509 02DE  0000                  1	           dw      0           ; rezerw
					a 
     510 02E0  0284                  1	           dw      xpom        ; offset
					 
     511 02E2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     512 02E4  00                    1	           db      0           ; liczni
					k 
     513 02E5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     514 02E6  0000                  1	           dw      0           ; rezerw
					a 
     515 02E8  028B                  1	           dw      xpom        ; offset
					 
     516 02EA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     517 02EC  00                    1	           db      0           ; liczni
					k 
     518 02ED  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     519 02EE  0000                  1	           dw      0           ; rezerw
					a 
     520 02F0  0292                  1	           dw      xpom        ; offset
					 
     521 02F2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     522 02F4  00                    1	           db      0           ; liczni
					k 
     523 02F5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     524 02F6  0000                  1	           dw      0           ; rezerw
					a 
     525 02F8  0299                  1	           dw      xpom        ; offset
					 
     526 02FA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-20


     527 02FC  00                    1	           db      0           ; liczni
					k 
     528 02FD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     529 02FE  0000                  1	           dw      0           ; rezerw
					a 
     530 0300  02A0                  1	           dw      xpom        ; offset
					 
     531 0302  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     532 0304  00                    1	           db      0           ; liczni
					k 
     533 0305  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     534 0306  0000                  1	           dw      0           ; rezerw
					a 
     535 0308  02A7                  1	           dw      xpom        ; offset
					 
     536 030A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     537 030C  00                    1	           db      0           ; liczni
					k 
     538 030D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     539 030E  0000                  1	           dw      0           ; rezerw
					a 
     540 0310  02AE                  1	           dw      xpom        ; offset
					 
     541 0312  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     542 0314  00                    1	           db      0           ; liczni
					k 
     543 0315  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     544 0316  0000                  1	           dw      0           ; rezerw
					a 
     545 0318  02B5                  1	           dw      xpom        ; offset
					 
     546 031A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     547 031C  00                    1	           db      0           ; liczni
					k 
     548 031D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     549 031E  0000                  1	           dw      0           ; rezerw
					a 
     550 0320  02BC                  1	           dw      xpom        ; offset
					 
     551 0322  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     552 0324  00                    1	           db      0           ; liczni
					k 
     553 0325  86                    1	           db      10000110B   ; bajt d
					ost?pu 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-21


     554 0326  0000                  1	           dw      0           ; rezerw
					a 
     555 0328  02C3                  1	           dw      xpom        ; offset
					 
     556 032A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     557 032C  00                    1	           db      0           ; liczni
					k 
     558 032D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     559 032E  0000                  1	           dw      0           ; rezerw
					a 
     560 0330  02CA                  1	           dw      xpom        ; offset
					 
     561 0332  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     562 0334  00                    1	           db      0           ; liczni
					k 
     563 0335  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     564 0336  0000                  1	           dw      0           ; rezerw
					a 
     565 0338  02D1                  1	           dw      xpom        ; offset
					 
     566 033A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     567 033C  00                    1	           db      0           ; liczni
					k 
     568 033D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     569 033E  0000                  1	           dw      0           ; rezerw
					a 
     570 0340  02D8                  1	           dw      xpom        ; offset
					 
     571 0342  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     572 0344  00                    1	           db      0           ; liczni
					k 
     573 0345  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     574 0346  0000                  1	           dw      0           ; rezerw
					a 
     575 0348  02DF                  1	           dw      xpom        ; offset
					 
     576 034A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     577 034C  00                    1	           db      0           ; liczni
					k 
     578 034D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     579 034E  0000                  1	           dw      0           ; rezerw
					a 
     580 0350  02E6                  1	           dw      xpom        ; offset
					 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-22


     581 0352  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     582 0354  00                    1	           db      0           ; liczni
					k 
     583 0355  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     584 0356  0000                  1	           dw      0           ; rezerw
					a 
     585 0358  02ED                  1	           dw      xpom        ; offset
					 
     586 035A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     587 035C  00                    1	           db      0           ; liczni
					k 
     588 035D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     589 035E  0000                  1	           dw      0           ; rezerw
					a 
     590 0360  02F4                  1	           dw      xpom        ; offset
					 
     591 0362  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     592 0364  00                    1	           db      0           ; liczni
					k 
     593 0365  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     594 0366  0000                  1	           dw      0           ; rezerw
					a 
     595 0368  02FB                  1	           dw      xpom        ; offset
					 
     596 036A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     597 036C  00                    1	           db      0           ; liczni
					k 
     598 036D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     599 036E  0000                  1	           dw      0           ; rezerw
					a 
     600 0370  0302                  1	           dw      xpom        ; offset
					 
     601 0372  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     602 0374  00                    1	           db      0           ; liczni
					k 
     603 0375  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     604 0376  0000                  1	           dw      0           ; rezerw
					a 
     605 0378  0309                  1	           dw      xpom        ; offset
					 
     606 037A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     607 037C  00                    1	           db      0           ; liczni
					k 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-23


     608 037D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     609 037E  0000                  1	           dw      0           ; rezerw
					a 
     610 0380  0310                  1	           dw      xpom        ; offset
					 
     611 0382  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     612 0384  00                    1	           db      0           ; liczni
					k 
     613 0385  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     614 0386  0000                  1	           dw      0           ; rezerw
					a 
     615 0388  0317                  1	           dw      xpom        ; offset
					 
     616 038A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     617 038C  00                    1	           db      0           ; liczni
					k 
     618 038D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     619 038E  0000                  1	           dw      0           ; rezerw
					a 
     620 0390  031E                  1	           dw      xpom        ; offset
					 
     621 0392  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     622 0394  00                    1	           db      0           ; liczni
					k 
     623 0395  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     624 0396  0000                  1	           dw      0           ; rezerw
					a 
     625 0398  0325                  1	           dw      xpom        ; offset
					 
     626 039A  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     627 039C  00                    1	           db      0           ; liczni
					k 
     628 039D  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     629 039E  0000                  1	           dw      0           ; rezerw
					a 
     630 03A0  032C                  1	           dw      xpom        ; offset
					 
     631 03A2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     632 03A4  00                    1	           db      0           ; liczni
					k 
     633 03A5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     634 03A6  0000                  1	           dw      0           ; rezerw
					a 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-24


     635 03A8  0333                  1	           dw      xpom        ; offset
					 
     636 03AA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     637 03AC  00                    1	           db      0           ; liczni
					k 
     638 03AD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     639 03AE  0000                  1	           dw      0           ; rezerw
					a 
     640 03B0  033A                  1	           dw      xpom        ; offset
					 
     641 03B2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     642 03B4  00                    1	           db      0           ; liczni
					k 
     643 03B5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     644 03B6  0000                  1	           dw      0           ; rezerw
					a 
     645 03B8  0341                  1	           dw      xpom        ; offset
					 
     646 03BA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     647 03BC  00                    1	           db      0           ; liczni
					k 
     648 03BD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     649 03BE  0000                  1	           dw      0           ; rezerw
					a 
     650 03C0  0348                  1	           dw      xpom        ; offset
					 
     651 03C2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     652 03C4  00                    1	           db      0           ; liczni
					k 
     653 03C5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     654 03C6  0000                  1	           dw      0           ; rezerw
					a 
     655 03C8  034F                  1	           dw      xpom        ; offset
					 
     656 03CA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     657 03CC  00                    1	           db      0           ; liczni
					k 
     658 03CD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     659 03CE  0000                  1	           dw      0           ; rezerw
					a 
     660 03D0  0356                  1	           dw      xpom        ; offset
					 
     661 03D2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-25


     662 03D4  00                    1	           db      0           ; liczni
					k 
     663 03D5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     664 03D6  0000                  1	           dw      0           ; rezerw
					a 
     665 03D8  035D                  1	           dw      xpom        ; offset
					 
     666 03DA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     667 03DC  00                    1	           db      0           ; liczni
					k 
     668 03DD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     669 03DE  0000                  1	           dw      0           ; rezerw
					a 
     670 03E0  0364                  1	           dw      xpom        ; offset
					 
     671 03E2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     672 03E4  00                    1	           db      0           ; liczni
					k 
     673 03E5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     674 03E6  0000                  1	           dw      0           ; rezerw
					a 
     675 03E8  036B                  1	           dw      xpom        ; offset
					 
     676 03EA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     677 03EC  00                    1	           db      0           ; liczni
					k 
     678 03ED  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     679 03EE  0000                  1	           dw      0           ; rezerw
					a 
     680 03F0  0372                  1	           dw      xpom        ; offset
					 
     681 03F2  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     682 03F4  00                    1	           db      0           ; liczni
					k 
     683 03F5  86                    1	           db      10000110B   ; bajt d
					ost?pu 
     684 03F6  0000                  1	           dw      0           ; rezerw
					a 
     685 03F8  0379                  1	           dw      xpom        ; offset
					 
     686 03FA  0030                  1	           dw      6 SHL 3     ; selekt
					or 
     687 03FC  00                    1	           db      0           ; liczni
					k 
     688 03FD  86                    1	           db      10000110B   ; bajt d
					ost?pu 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-26


     689 03FE  0000                  1	           dw      0           ; rezerw
					a 
     690				 
     691 0400				segment_IDT_end       LABEL byte 
     692 0400				segment_IDT   ENDS 
     693				 
     694				;--------------------------------------
					----------------------------------- 
     695				 
     696				; segment danych dla trybu chronionego 
					- segment ten wskazywany jest przez 
     697				; selektor 2 * 8 = 0010H 
     698 0000				nowe_dane  SEGMENT use16 
     699 0000  20 20 50 72 6F 63 65	kom4       db      '  Procesor pracuje 
					w trybie chronionym (pm)' 
     700       73 6F 72 20 70 72 61	
     701       63 75 6A 65 20 77 20	
     702       74 72 79 62 69 65 20	
     703       63 68 72 6F 6E 69 6F	
     704       6E 79 6D 20 28 70 6D	
     705       29			
     706 002B  20 2D 20 45 73 63 20	           db      ' - Esc - wyjscie',0
					 
     707       2D 20 77 79 6A 73 63	
     708       69 65 00			
     709 003C  4E 69 65 72 6F 7A 70	kom5       db      'Nierozpoznane polec
					enie', 0 
     710       6F 7A 6E 61 6E 65 20	
     711       70 6F 6C 65 63 65 6E	
     712       69 65 00			
     713 0054  0080[			bufor_klaw db      128 dup (?)      ; b
					ufor klawiatury 
     714	    ??			
     715			 ]	
     716				
     717 00D4  ????			indeks_klaw dw      ? 
     718 00D6  00			ekran_x    db       0               ; w
					skaznik nr kolumny do zapisu na ekranie
					 
     719 00D7  01			ekran_y    db       1               ; w
					skaznik nr wiersza do zapisu na ekranie
					 
     720				;dane       db       4000 dup (?)    ; 
					a tu mamy bufor na ekran 
     721				 
     722				 
     723				; tablica do przekodowania kodow pozycj
					i na kody ASCII 
     724 00D8  00 1B 31 32 33 34 35	tabl_przekA db     0, 1BH, '1234567890-
					=',08H, 09H     ; kody  0 - 15 
     725       36 37 38 39 30 2D 3D	
     726       08 09			
     727 00E8  71 77 65 72 74 79 75	            db     'qwertyuiop[]', 0DH,
					 0, 'as'        ; kody 16 - 31 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-27


     728       69 6F 70 5B 5D 0D 00	
     729       61 73			
     730 00F8  64 66 67 68 6A 6B 6C	            db     'dfghjkl;''`',0,'\zx
					cv'             ; kody 32 - 47 
     731       3B 27 60 00 5C 7A 78	
     732       63 76			
     733 0108  62 6E 6D 2C 2E 2F 00	            db     'bnm,./',0,'*',0,' '
					,0              ; kody 48 - ... 
     734       2A 00 20 00		
     735				 
     736				;-----dane ogolne------------ 
     737 0113  4B 6F 6E 66 69 67 75	info1 db 'Konfiguracja komputera odczyt
					ana z pamieci CMOS',0 
     738       72 61 63 6A 61 20 6B	
     739       6F 6D 70 75 74 65 72	
     740       61 20 6F 64 63 7A 79	
     741       74 61 6E 61 20 7A 20	
     742       70 61 6D 69 65 63 69	
     743       20 43 4D 4F 53 00	
     744 0143  47 64 61 6E 73 6B 20	info2 db 'Gdansk 2005',0 
     745       32 30 30 35 00		
     746 014F  45 53 43 20 2D 20 77	tekst8 db 'ESC - wyjscie',0 
     747       79 6A 73 63 69 65 00	
     748				;----monitor---------------- 
     749 015D  0A			monitorX db 10 
     750 015E  0C			monitorY db 12 
     751 015F  4D 6F 6E 69 74 6F 72	tekst5 db 'Monitor type:',0 
     752       20 74 79 70 65 3A 00	
     753 016D  45 47 41 20 20 26 20	monitor1 db 'EGA  & VGA',0 
     754       56 47 41 00		
     755 0178  34 30 78 32 35 20 43	monitor2 db '40x25 CGA',0 
     756       47 41 00			
     757 0182  38 30 78 32 35 20 43	monitor3 db '80x25 CGA',0 
     758       47 41 00			
     759 018C  4D 44 41 20 28 4D 6F	monitor4 db 'MDA (Monochrome)',0 
     760       6E 6F 63 68 72 6F 6D	
     761       65 29 00			
     762				;-----data----------------- 
     763 019D  44 7A 69 73 20 6D 61	tekst1 db  'Dzis mamy:',0 
     764       6D 79 3A 00		
     765 01A8  46			dataX db 70 
     766 01A9  01			dataY db 1 
     767				;-----czas----------------- 
     768 01AA  67 6F 64 7A 2E 00	tekst2 db 'godz.',0 
     769 01B0  78			czasX db 120 
     770 01B1  01			czasY db 1 
     771				;-----base memory---------- 
     772 01B2  42 61 73 65 20 6D 65	tekst3 db 'Base memory:',0 
     773       6D 6F 72 79 3A 00	
     774 01BF  0A			Base_memoryX db 10 
     775 01C0  08			Base_memoryY db 8 
     776				;-----extended memory------ 
     777 01C1  45 78 74 65 6E 64 65	tekst4 db 'Extended memory:',0 
     778       64 20 6D 65 6D 6F 72	
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-28


     779       79 3A 00			
     780 01D2  0A			Ext_memoryX db 10 
     781 01D3  0A			Ext_memoryY db 10 
     782				;-------floppy--------------- 
     783 01D4  46 69 72 73 74 20 66	first_floppy db 'First floppy:',0 
     784       6C 6F 70 70 79 3A 00	
     785 01E2  53 65 63 6F 6E 64 20	second_floppy db 'Second floppy:',0 
     786       66 6C 6F 70 70 79 3A	
     787       00			
     788 01F1  4E 6F 20 64 72 69 76	floppy1 db 'No drive',0 
     789       65 00			
     790 01FA  33 36 30 4B 42 20 35	floppy2 db '360KB 5.25"',0 
     791       2E 32 35 22 00		
     792 0206  31 2E 32 4D 42 20 35	floppy3 db '1.2MB 5.25"',0 
     793       2E 32 35 22 00		
     794 0212  37 32 30 4B 42 20 33	floppy4 db '720KB 3.5"',0 
     795       2E 35 22 00		
     796 021D  31 2E 34 34 4D 42 20	floppy5 db '1.44MB 3.5"',0 
     797       33 2E 35 22 00		
     798 0229  32 2E 38 38 4D 42 20	floppy6 db '2.88MB 3.5"',0 
     799       33 2E 35 22 00		
     800 0235  0A			FirstFX db 10 
     801 0236  04			FirstFY db 4 
     802 0237  0A			SecondFX db 10 
     803 0238  06			SecondFY db 6 
     804				;--------data mode---------- 
     805 0239  44 61 74 61 20 6D 6F	tekst6 db 'Data mode:',0 
     806       64 65 3A 00		
     807 0244  42 69 6E 61 72 79 00	Zbinary db 'Binary',0 
     808 024B  42 43 44 00		ZBCD    db 'BCD',0 
     809 024F  0A			Data_ModeX db 10 
     810 0250  0E			Data_ModeY db 14 
     811				;--------hour mode----------- 
     812 0251  48 6F 75 72 20 6D 6F	tekst7 db 'Hour mode:',0 
     813       64 65 3A 00		
     814 025C  31 32 68 00		godz1 db '12h',0 
     815 0260  32 34 68 00		godz2 db '24h',0 
     816 0264  0A			Hour_ModeX db 10 
     817 0265  10			Hour_ModeY db 16 
     818				 
     819				 
     820 0266  ??			pomoc db (?) 
     821 0267  17			atr db 17h 
     822				 
     823 0268				nowe_dane_end      LABEL byte 
     824 0268				nowe_dane  ENDS 
     825				 
     826				;--------------------------------------
					----------------------------------- 
     827 0000				nowy_stos  SEGMENT use16            ; s
					tos dla trybu chronionego 
     828 0000  0800[			pstos      dw      2048 dup (?) 
     829	   ????			
     830			 ]	
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-29


     831				
     832 1000				nowy_stos_end      LABEL byte 
     833 1000				nowy_stos  ENDS 
     834				 
     835				;--------------------------------------
					------------------------------------- 
     836 0000				stos_RM       SEGMENT use16 stack   ; s
					tos dla trybu rzeczywistego 
     837 0000  0100[			           dw      256 dup (?) 
     838	   ????			
     839			 ]	
     840				
     841 0200				stos_RM       ENDS 
     842				 
     843				;--------------------------------------
					------------------------------------- 
     844 0000				ekran      SEGMENT use16 at 0B800H   ; 
					segment imituj?cy pami?? ekranu 
     845 0000  0FA0[			           db      4000 dup (?) 
     846	    ??			
     847			 ]	
     848				
     849 0FA0				ekran_end  LABEL   byte 
     850 0FA0				ekran      ENDS 
     851				 
     852				;--------------------------------------
					------------------------------------- 
     853 0000				rozkazy    SEGMENT use16            ; r
					ozkazy programu 
     854				 
     855				; obszary 48-bitowe potrzebne do ladowa
					nia rejestr�w GDTR oraz IDTR 
     856				 
     857 0000  0000000000000000		zaw_GDTR   dq      0 
     858 0008  0000000000000000		zaw_IDTR   dq      0 
     859				 
     860 0010				rm_idt     LABEL   qword   ; wskaznik d
					o tabl. wekt. przerwan (tryb rzecz.) 
     861 0010  03FF			           dw      03FFH               
					        ; wielko?? tablicy IDT 
     862 0012  00000000			           dd      0 
     863				 
     864 0016  0D 0A 4C 61 62 6F 72	komunikat1     db  CR, LF, 'Laboratoriu
					m Oprogramowania Systemowego', CR,LF 
     865       61 74 6F 72 69 75 6D	
     866       20 4F 70 72 6F 67 72	
     867       61 6D 6F 77 61 6E 69	
     868       61 20 53 79 73 74 65	
     869       6D 6F 77 65 67 6F 0D	
     870       0A			
     871 0041  50 72 6F 67 72 61 6D	               db  'Program przykladowy
					 do cwiczenia 8 - ' 
     872       20 70 72 7A 79 6B 6C	
     873       61 64 6F 77 79 20 64	
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-30


     874       6F 20 63 77 69 63 7A	
     875       65 6E 69 61 20 38 20	
     876       2D 20			
     877 0066  77 65 72 73 6A 61 20	               db  'wersja 2.0 - marzec
					 2000', CR, LF, LF 
     878       32 2E 30 20 2D 20 6D	
     879       61 72 7A 65 63 20 32	
     880       30 30 30 0D 0A 0A	
     881 0081  41 6B 74 75 61 6C 6E	               db  'Aktualnie procesor 
					pracuje w trybie rzeczywistym', CR, LF 
     882       69 65 20 70 72 6F 63	
     883       65 73 6F 72 20 70 72	
     884       61 63 75 6A 65 20 77	
     885       20 74 72 79 62 69 65	
     886       20 72 7A 65 63 7A 79	
     887       77 69 73 74 79 6D 0D	
     888       0A			
     889 00B3  4E 61 63 69 73 6E 69	               db  'Nacisniecie dowolne
					go klawisza powoduje przejscie do ' 
     890       65 63 69 65 20 64 6F	
     891       77 6F 6C 6E 65 67 6F	
     892       20 6B 6C 61 77 69 73	
     893       7A 61 20 70 6F 77 6F	
     894       64 75 6A 65 20 70 72	
     895       7A 65 6A 73 63 69 65	
     896       20 64 6F 20		
     897 00E8  74 72 79 62 75 20 63	               db  'trybu chronionego',
					 CR, LF 
     898       68 72 6F 6E 69 6F 6E	
     899       65 67 6F 0D 0A		
     900 00FB  45 73 63 20 2D 20 77	               db  'Esc - wyjscie z pro
					gramu',CR, LF 
     901       79 6A 73 63 69 65 20	
     902       7A 20 70 72 6F 67 72	
     903       61 6D 75 0D 0A		
     904 0115  0502[			               db  1282 dup (32) 
     905	   20			
     906			 ]	
     907				
     908 0617  24			               db  '$' 
     909				 
     910 0618  0D 0A 0A 5A 61 6B 6F	komunikat2     db  CR, LF, LF, 'Zakoncz
					enie programu - procesor pracuje ' 
     911       6E 63 7A 65 6E 69 65	
     912       20 70 72 6F 67 72 61	
     913       6D 75 20 2D 20 70 72	
     914       6F 63 65 73 6F 72 20	
     915       70 72 61 63 75 6A 65	
     916       20			
     917 0643  70 6F 6E 6F 77 6E 69	               db  'ponownie w trybie r
					zeczywistym', CR, LF, '$' 
     918       65 20 77 20 74 72 79	
     919       62 69 65 20 72 7A 65	
     920       63 7A 79 77 69 73 74	
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-31


     921       79 6D 0D 0A 24		
     922 0664  0D 0A 50 72 6F 63 65	komunikat6     db  CR, LF, 'Procesor pr
					acuje aktualnie w trybie V86', CR, LF 
     923       73 6F 72 20 70 72 61	
     924       63 75 6A 65 20 61 6B	
     925       74 75 61 6C 6E 69 65	
     926       20 77 20 74 72 79 62	
     927       69 65 20 56 38 36 0D	
     928       0A			
     929 068F  20 2D 20 70 72 7A 65	               db  ' - przelaczenie do 
					trybu chroniego jest mozliwe tylko ' 
     930       6C 61 63 7A 65 6E 69	
     931       65 20 64 6F 20 74 72	
     932       79 62 75 20 63 68 72	
     933       6F 6E 69 65 67 6F 20	
     934       6A 65 73 74 20 6D 6F	
     935       7A 6C 69 77 65 20 74	
     936       79 6C 6B 6F 20		
     937 06C5  7A 20 74 72 79 62 75	               db  'z trybu rzeczywiste
					go', CR, LF, '$' 
     938       20 72 7A 65 63 7A 79	
     939       77 69 73 74 65 67 6F	
     940       0D 0A 24			
     941				 
     942				;--------------------------------------
					-------------------------------- 
     943				; kod wykonywany ponownie w trybie rzec
					zywistym bezposrednio przed 
     944				; zakonczeniem wykonywania programu 
     945				 
     946				           ASSUME  cs:rozkazy 
     947 06DD				ptt3: 
     948 06DD  2E: 0F 01 1E 0010 R	           lidt    cs:rm_idt   ; podani
					e adresu tabl. wektorow przerwan 
     949				                               ; dla tr
					ybu rzeczywistego 
     950 06E3  B8 ---- R		           mov     ax, SEG stos_RM ; tw
					orzenie stosu dla trybu rzecz. 
     951 06E6  8E D0			           mov     ss, ax 
     952 06E8  BC 0080			           mov     sp, 80H 
     953 06EB  FB			           sti 
     954 06EC  E8 0704 R		           call    czysc_ekran 
     955 06EF  0E			           push    cs 
     956 06F0  1F			           pop     ds 
     957 06F1  BA 0618 R		           mov     dx, OFFSET komunikat
					2 
     958 06F4  B4 09			           mov     ah, 09H 
     959 06F6  CD 21			           int     21H         ; wy?wie
					tlenie komunikatu 
     960 06F8				pelny_koniec: 
     961 06F8  B8 4C00			           mov     ax,4C00H      ; zako
					�czenie wykonywania programu 
     962 06FB  CD 21			           int     21H 
     963				 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-32


     964				 
     965				;--------------------------------------
					-------------------------------- 
     966				 
     967				; kod wykonywany w trybie rzeczywistym 
					bezposrednio po uruchomieniu programu 
     968				 
     969				 
     970 06FD  90			pocz:      nop 
     971				 
     972				INCLUDE    GDT.INC 
     973			     C	 
     974			     C	 
     975			     C	; Wyswietlanie komunikatow o przeznacze
					niu programu i oczekiwanie 
     976			     C	 
     977			     C	; na potwierdzenie dalszego wykonywania
					 programu 
     978			     C	 
     979			     C	 
     980			     C	 
     981 06FE  E8 0704 R             C	           call    czysc_ekran 
     982			     C	 
     983 0701  EB 1C 90              C	           jmp     cd_przyg 
     984			     C	 
     985			     C	 
     986			     C	 
     987			     C	; czyszczenie ekranu - przewiniecie okn
					a o zero wierszy 
     988			     C	 
     989 0704                        C	czysc_ekran        PROC    near 
     990			     C	 
     991 0704  B4 06                 C	           mov     ah, 06      ; przewi
					niecie okna 
     992			     C	 
     993 0706  B0 00                 C	           mov     al, 0       ; zero w
					ierszy 
     994			     C	 
     995 0708  B7 07                 C	           mov     bh, 07      ; atrybu
					t 
     996			     C	 
     997 070A  B5 00                 C	           mov     ch, 0       ; wspolr
					zedne okna 
     998			     C	 
     999 070C  B1 00                 C	           mov     cl, 0       ; lewy g
					orny rog 
    1000			     C	 
    1001 070E  B6 18                 C	           mov     dh, 24      ; prawy 
					dolny rog 
    1002			     C	 
    1003 0710  B2 4F                 C	           mov     dl, 79 
    1004			     C	 
    1005 0712  CD 10                 C	           int     10H 
    1006			     C	 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-33


    1007			     C	 
    1008			     C	 
    1009 0714  B4 02                 C	           mov     ah, 2      ; ustawie
					nie kursora w gornym lewym rogu ekranu 
    1010			     C	 
    1011 0716  B2 00                 C	           mov     dl, 0 
    1012			     C	 
    1013 0718  B6 00                 C	           mov     dh, 0 
    1014			     C	 
    1015 071A  B7 00                 C	           mov     bh, 0 
    1016			     C	 
    1017 071C  CD 10                 C	           int     10H 
    1018			     C	 
    1019 071E  C3                    C	           ret 
    1020			     C	 
    1021 071F                        C	czysc_ekran    ENDP 
    1022			     C	 
    1023			     C	 
    1024			     C	 
    1025 071F                        C	cd_przyg: 
    1026			     C	 
    1027 071F  0E                    C	           push    cs 
    1028			     C	 
    1029 0720  1F                    C	           pop     ds 
    1030			     C	 
    1031			     C	 
    1032			     C	 
    1033			     C	 
    1034			     C	 
    1035			     C	; sprawdzenie czy procesor pracuje w tr
					ybie rzeczywistym - jesli pracuje 
    1036			     C	 
    1037			     C	; w trybie V86, to nastepuje zakonczeni
					e wykonywania programu 
    1038			     C	 
    1039 0721  0F 01 E0              C	           smsw ax      ; czytaj slowo 
					stanu procesora 
    1040			     C	 
    1041 0724  A9 0001               C	           test    ax, 1 
    1042			     C	 
    1043 0727  0F 84 0737 R          C	           jz      dalej_RM   ; skok, g
					dy tryb rzeczywisty 
    1044			     C	 
    1045			     C	 
    1046			     C	 
    1047			     C	; procesor pracuje w trybie V86 - konie
					c programu 
    1048			     C	 
    1049 072B  BA 0664 R             C	           mov     dx, OFFSET komunikat
					6 
    1050			     C	 
    1051 072E  B4 09                 C	           mov     ah, 9 
    1052			     C	 
    1053 0730  CD 21                 C	           int     21H     ; komunikat 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-34


					o zakonczeniu programu 
    1054			     C	 
    1055 0732  B8 4C03               C	           mov     ax, 4C03H 
    1056			     C	 
    1057 0735  CD 21                 C	           int     21H 
    1058			     C	 
    1059 0737                        C	dalej_RM: 
    1060			     C	 
    1061 0737  BA 0016 R             C	           mov     dx, OFFSET komunikat
					1 
    1062			     C	 
    1063 073A  B4 09                 C	           mov     ah, 09H 
    1064			     C	 
    1065 073C  CD 21                 C	           int     21H         ; wy?wie
					tlenie komunikatu 
    1066			     C	 
    1067			     C	 
    1068			     C	 
    1069 073E  B4 07                 C	           mov     ah, 07H     ; oczeki
					wanie na nacisniecie klawisza 
    1070			     C	 
    1071 0740  CD 21                 C	           int     21H 
    1072			     C	 
    1073 0742  3C 1B                 C	           cmp     al, 27 
    1074			     C	 
    1075 0744  74 B2                 C	           je      pelny_koniec; nacisn
					ieto Esc 
    1076			     C	 
    1077			     C	 
    1078			     C	 
    1079			     C	; ponowne czyszczenie ekranu - przewini
					ecie okna o zero wierszy 
    1080			     C	 
    1081 0746  B4 06                 C	           mov     ah, 06      ; przewi
					niecie okna 
    1082			     C	 
    1083 0748  B0 00                 C	           mov     al, 0       ; zero w
					ierszy 
    1084			     C	 
    1085 074A  B7 07                 C	           mov     bh, 07      ; atrybu
					t 
    1086			     C	 
    1087 074C  B5 00                 C	           mov     ch, 0       ; wspolr
					zedne okna 
    1088			     C	 
    1089 074E  B1 00                 C	           mov     cl, 0       ; lewy g
					orny rog 
    1090			     C	 
    1091 0750  B6 18                 C	           mov     dh, 24      ; prawy 
					dolny rog 
    1092			     C	 
    1093 0752  B2 4F                 C	           mov     dl, 79 
    1094			     C	 
    1095 0754  CD 10                 C	           int     10H 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-35


    1096			     C	 
    1097			     C	 
    1098			     C	 
    1099			     C	 
    1100			     C	 
    1101			     C	 
    1102			     C	 
    1103			     C	;--------------------------------------
					---------------------------------- 
    1104			     C	 
    1105			     C	 
    1106			     C	 
    1107			     C	; tworzenie deskryptor�w w globalnej 
					tablicy przerwa� (na razie wszystkie 
    1108			     C	 
    1109			     C	; pola w deskryptorach zawieraj? zera) 
    1110			     C	 
    1111			     C	; we wszystkich deskryptorach bajt 6 (b
					ity G, D, 0, AVL, rozmiar 19 - 16) 
    1112			     C	 
    1113			     C	; pozostawiany jest bez zmian (zawiera 
					zero) 
    1114			     C	 
    1115			     C	 
    1116			     C	 
    1117			     C	;           ASSUME  ds:segment_GDT 
    1118			     C	 
    1119 0756  B8 ---- R             C	           mov     ax, SEG segment_GDT 
    1120			     C	 
    1121 0759  8E D8                 C	           mov     ds, ax          ; la
					dowanie rejestru DS 
    1122			     C	 
    1123			     C	 
    1124			     C	 
    1125			     C	; tworzenie deskryptora na pozycji 2 w 
					GDT - deskryptor ten opisuje 
    1126			     C	 
    1127			     C	; segment 'nowe_dane' 
    1128			     C	 
    1129 075B  BB 0010               C	           mov     bx, 2 * 8       ; of
					fset w segmencie segment_GDT 
    1130			     C	 
    1131 075E  C7 07 0267 R          C	           mov     word PTR ds:[bx], OF
					FSET nowe_dane_end  - 1 ; rozmiar segme
					ntu 
    1132			     C	 
    1133 0762  B8 ---- R             C	           mov     ax, SEG nowe_dane 
    1134			     C	 
    1135 0765  66| 0F B7 C0          C	           movzx   eax, ax         ; ze
					rowanie starszej czesci EAX 
    1136			     C	 
    1137 0769  66| C1 E0 04          C	           shl     eax, 4          ; w 
					EAX adres bazowy segmentu 
    1138			     C	 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-36


    1139 076D  89 47 02              C	           mov     ds:[bx]+2,ax       ;
					 adres bazowy 15 - 0 
    1140			     C	 
    1141 0770  66| C1 C0 10          C	           rol     eax, 16         ; za
					miana polowek EAX 
    1142			     C	 
    1143 0774  88 47 04              C	           mov     ds:[bx]+4, al      ;
					 adres bazowy 23 - 16 
    1144			     C	 
    1145 0777  88 67 07              C	           mov     ds:[bx]+7, ah      ;
					 adres bazowy 31 - 24 
    1146			     C	 
    1147 077A  C6 47 05 92           C	           mov     byte PTR ds:[bx]+5, 
					10010010B ; bajt dostepu 
    1148			     C	 
    1149			     C	 
    1150			     C	 
    1151			     C	; tworzenie deskryptora na pozycji 3 w 
					GDT - deskryptor ten opisuje 
    1152			     C	 
    1153			     C	; segment 'ekran' 
    1154			     C	 
    1155 077E  BB 0018               C	           mov     bx, 3 * 8       ; of
					fset w segmencie segment_GDT 
    1156			     C	 
    1157 0781  C7 07 0F9F R          C	           mov     word PTR ds:[bx], OF
					FSET ekran_end  - 1 ; rozmiar segmentu 
    1158			     C	 
    1159 0785  B8 ---- R             C	           mov     ax, SEG ekran 
    1160			     C	 
    1161 0788  66| 0F B7 C0          C	           movzx   eax, ax         ; ze
					rowanie starszej czesci EAX 
    1162			     C	 
    1163 078C  66| C1 E0 04          C	           shl     eax, 4          ; w 
					EAX adres bazowy segmentu 
    1164			     C	 
    1165 0790  89 47 02              C	           mov     ds:[bx]+2,ax       ;
					 adres bazowy 15 - 0 
    1166			     C	 
    1167 0793  66| C1 C0 10          C	           rol     eax, 16         ; za
					miana polowek EAX 
    1168			     C	 
    1169 0797  88 47 04              C	           mov     ds:[bx]+4, al      ;
					 adres bazowy 23 - 16 
    1170			     C	 
    1171 079A  88 67 07              C	           mov     ds:[bx]+7, ah      ;
					 adres bazowy 31 - 24 
    1172			     C	 
    1173 079D  C6 47 05 92           C	           mov     byte PTR ds:[bx]+5,1
					0010010B ; bajt dostepu 
    1174			     C	 
    1175			     C	 
    1176			     C	 
    1177			     C	; tworzenie deskryptora na pozycji 6 w 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-37


					GDT - deskryptor ten opisuje 
    1178			     C	 
    1179			     C	; segment 'obsl_int' 
    1180			     C	 
    1181			     C	 
    1182			     C	 
    1183 07A1  BB 0030               C	           mov     bx, 6 * 8       ; of
					fset w segmencie segment_GDT 
    1184			     C	 
    1185 07A4  C7 07 05B6 R          C	           mov     word PTR ds:[bx], OF
					FSET obsl_int_end  - 1 ; rozmiar segmen
					tu 
    1186			     C	 
    1187 07A8  B8 ---- R             C	           mov     ax, SEG obsl_int 
    1188			     C	 
    1189 07AB  66| 0F B7 C0          C	           movzx   eax, ax         ; ze
					rowanie starszej czesci EAX 
    1190			     C	 
    1191 07AF  66| C1 E0 04          C	           shl     eax, 4          ; w 
					EAX adres bazowy segmentu 
    1192			     C	 
    1193 07B3  89 47 02              C	           mov     ds:[bx]+2,ax       ;
					 adres bazowy 15 - 0 
    1194			     C	 
    1195 07B6  66| C1 C0 10          C	           rol     eax, 16         ; za
					miana polowek EAX 
    1196			     C	 
    1197 07BA  88 47 04              C	           mov     ds:[bx]+4, al      ;
					 adres bazowy 23 - 16 
    1198			     C	 
    1199 07BD  88 67 07              C	           mov     ds:[bx]+7, ah      ;
					 adres bazowy 31 - 24 
    1200			     C	 
    1201 07C0  C6 47 05 9A           C	           mov     byte PTR ds:[bx]+5,1
					0011010B ; bajt dostepu 
    1202			     C	 
    1203			     C	 
    1204			     C	 
    1205			     C	; tworzenie deskryptora na pozycji 7 w 
					GDT 
    1206			     C	 
    1207 07C4  BB 0038               C	           mov     bx, 7 * 8       ; of
					fset w segmencie segment_GDT 
    1208			     C	 
    1209 07C7  C7 07 0FFF R          C	           mov     word PTR ds:[bx], OF
					FSET nowy_stos_end  - 1 ; rozmiar segme
					ntu 
    1210			     C	 
    1211 07CB  B8 ---- R             C	           mov     ax, SEG nowy_stos 
    1212			     C	 
    1213 07CE  66| 0F B7 C0          C	           movzx   eax, ax         ; ze
					rowanie starszej czesci EAX 
    1214			     C	 
    1215 07D2  66| C1 E0 04          C	           shl     eax, 4          ; w 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-38


					EAX adres bazowy segmentu 
    1216			     C	 
    1217 07D6  89 47 02              C	           mov     ds:[bx]+2,ax       ;
					 adres bazowy 15 - 0 
    1218			     C	 
    1219 07D9  66| C1 C0 10          C	           rol     eax, 16         ; za
					miana polowek EAX 
    1220			     C	 
    1221 07DD  88 47 04              C	           mov     ds:[bx]+4, al      ;
					 adres bazowy 23 - 16 
    1222			     C	 
    1223 07E0  88 67 07              C	           mov     ds:[bx]+7, ah      ;
					 adres bazowy 31 - 24 
    1224			     C	 
    1225 07E3  C6 47 05 92           C	           mov     byte PTR ds:[bx]+5,1
					0010010B ; bajt dostepu 
    1226			     C	 
    1227			     C	 
    1228			     C	 
    1229			     C	; tworzenie deskryptora na pozycji 8 w 
					GDT 
    1230			     C	 
    1231 07E7  BB 0040               C	           mov     bx, 8 * 8       ; of
					fset w segmencie segment_GDT 
    1232			     C	 
    1233 07EA  C7 07 0D07 R          C	           mov     word PTR ds:[bx], OF
					FSET rozkazy_end  - 1 ; rozmiar segment
					u 
    1234			     C	 
    1235 07EE  B8 ---- R             C	           mov     ax, SEG rozkazy 
    1236			     C	 
    1237 07F1  66| 0F B7 C0          C	           movzx   eax, ax         ; ze
					rowanie starszej czesci EAX 
    1238			     C	 
    1239 07F5  66| C1 E0 04          C	           shl     eax, 4          ; w 
					EAX adres bazowy segmentu 
    1240			     C	 
    1241 07F9  89 47 02              C	           mov     ds:[bx]+2,ax       ;
					 adres bazowy 15 - 0 
    1242			     C	 
    1243 07FC  66| C1 C0 10          C	           rol     eax, 16         ; za
					miana polowek EAX 
    1244			     C	 
    1245 0800  88 47 04              C	           mov     ds:[bx]+4, al      ;
					 adres bazowy 23 - 16 
    1246			     C	 
    1247 0803  88 67 07              C	           mov     ds:[bx]+7, ah      ;
					 adres bazowy 31 - 24 
    1248			     C	 
    1249 0806  C6 47 05 9A           C	           mov     byte PTR ds:[bx]+5,1
					0011010B ; bajt dostepu 
    1250			     C	 
    1251			     C	 
    1252			     C	 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-39


    1253			     C	; tworzenie deskryptora na pozycji 9 w 
					GDT - deskryptor uzywany jako 
    1254			     C	 
    1255			     C	; atrapa przy przejsciu z trybu chronio
					nego do rzeczywistego (w tym 
    1256			     C	 
    1257			     C	; przypadku adres bazowy w deskryptorze
					 nie ma zadnego znaczenia) 
    1258			     C	 
    1259 080A  BB 0048               C	           mov     bx, 9 * 8       ; of
					fset w segmencie segment_GDT 
    1260			     C	 
    1261 080D  C7 07 FFFF            C	           mov     word PTR ds:[bx],0FF
					FFH        ; wymagany rozmiar segmentu 
    1262			     C	 
    1263			     C	; bajt dostepu musi opisywac segment da
					nych (fikcyjny), w ktorym: 
    1264			     C	 
    1265			     C	; P=1, ED=0, W=1 
    1266			     C	 
    1267 0811  C6 47 05 92           C	           mov     byte PTR ds:[bx]+5,1
					0010010B ; bajt dost?pu 
    1268			     C	 
    1269			     C	 
    1270			     C	 
    1271			     C	; tworzenie deskryptora na pozycji 10 w
					 GDT - deskryptor ten opisuje 
    1272			     C	 
    1273			     C	; segment kodu 'roz_zak', ktory jest wy
					konywany bezposrednio przed 
    1274			     C	 
    1275			     C	; przejsciem do trybu rzeczywistego (po
					le "wielkosc" = FFFFH) 
    1276			     C	 
    1277 0815  BB 0050               C	           mov     bx, 10 * 8       ; o
					ffset w segmencie segment_GDT 
    1278			     C	 
    1279 0818  C7 07 FFFF            C	           mov     word PTR ds:[bx], 0F
					FFFH       ; rozmiar segmentu 
    1280			     C	 
    1281 081C  B8 ---- R             C	           mov     ax, SEG roz_zak 
    1282			     C	 
    1283 081F  66| 0F B7 C0          C	           movzx   eax, ax         ; ze
					rowanie starszej czesci EAX 
    1284			     C	 
    1285 0823  66| C1 E0 04          C	           shl     eax, 4          ; w 
					EAX adres bazowy segmentu 
    1286			     C	 
    1287 0827  89 47 02              C	           mov     ds:[bx]+2,ax       ;
					 adres bazowy 15 - 0 
    1288			     C	 
    1289 082A  66| C1 C0 10          C	           rol     eax, 16         ; za
					miana polowek EAX 
    1290			     C	 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-40


    1291 082E  88 47 04              C	           mov     ds:[bx]+4, al      ;
					 adres bazowy 23 - 16 
    1292			     C	 
    1293 0831  88 67 07              C	           mov     ds:[bx]+7, ah      ;
					 adres bazowy 31 - 24 
    1294			     C	 
    1295 0834  C6 47 05 9A           C	           mov     byte PTR ds:[bx]+5,1
					0011010B ; bajt dostepu 
    1296			     C	 
    1297			     C	 
    1298			     C	 
    1299			     C	 
    1300				 
    1301				; fragment programu zawarty w pliku GDT
					.INC wykonywany jest w trybie 
    1302				; rzeczywistym bezposrednio po uruchomi
					eniu programu; wykonywane jest tam 
    1303				; czyszczenie ekranu, po czym podawane 
					sa komunikaty informacyjne, po 
    1304				; ktorych oczekuje sie na potwierdzenie
					 dalszego wykonywania programu 
    1305				; nastepnie wpisuje odpowiednio zakodow
					ane deskryptory 
    1306				; do Globalnej Tablicy Deskryptorow GDT
					 
    1307				 
    1308				;--------------------------------------
					---------------------------------- 
    1309				 
    1310				; przygotowanie do wykonania rozkazu LG
					DT (ladowanie rejestru GDTR) 
    1311 0838  B8 0058 R		           mov     ax, OFFSET segment_G
					DT_end  ; rozmiar tablicy GDT 
    1312 083B  2E: A3 0000 R		           mov     word PTR cs:zaw_GDTR
					+0, ax 
    1313 083F  B8 ---- R		           mov     ax, SEG segment_GDT 
					; adres (segmentowy) globalnej 
    1314				                                       
					; tablicy deskryptorow 
    1315 0842  66| 0F B7 C0		           movzx   eax, ax             
					; zerowanie starszej czesci EAX 
    1316 0846  66| C1 E0 04		           shl     eax, 4              
					; w EAX adres bazowy segmentu 
    1317 084A  2E: 66| A3 0002 R	           mov     dword PTR cs:zaw_GDT
					R+2, eax 
    1318				 
    1319				 
    1320				; przygotowanie do wykonania rozkazu LI
					DT (ladowanie rejestru IDTR) 
    1321 084F  B8 0400 R		           mov     ax, OFFSET segment_I
					DT_end  ; rozmiar tablicy IDT 
    1322 0852  2E: A3 0008 R		           mov     word PTR cs:zaw_IDTR
					+0, ax 
    1323 0856  B8 ---- R		           mov     ax, SEG segment_IDT 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-41


					; adres (segmentowy) tablicy 
    1324				                                       
					; deskryptorow przerwan 
    1325 0859  66| 0F B7 C0		           movzx   eax, ax             
					; zerowanie starszej czesci EAX 
    1326 085D  66| C1 E0 04		           shl     eax, 4              
					; w EAX adres bazowy segmentu 
    1327 0861  2E: 66| A3 000A R	           mov     dword PTR cs:zaw_IDT
					R+2, eax 
    1328				 
    1329 0866  FA			           cli                         
					; zablokowanie przyjmowania przerwan 
    1330				 
    1331 0867  2E: 0F 01 16 0000 R	           lgdt    cs:zaw_GDTR         
					; ladowanie rejestru GDTR 
    1332 086D  2E: 0F 01 1E 0008 R	           lidt    cs:zaw_IDTR         
					; ladowanie rejestru IDTR 
    1333				 
    1334				; przelaczenie do trybu chronionego 
    1335 0873  66| 0F 20 C0		           mov     eax, CR0            
					;pierwszy bit tego rejestru na jeden to
					 wtedy przechodzi na tryb chroniony 
    1336 0877  66| 83 C8 01		           or      eax, 1 
    1337 087B  66| 0F 22 C0		           mov     CR0, eax 
    1338 087F  EB 01 90			           jmp     next        ; oczysz
					czenie kolejki rozkaz�w 
    1339				                               ; oczeku
					j?cych na wykonanie 
    1340 0882  90			next:      nop 
    1341				 
    1342				 
    1343				; Skok daleki do nastepnej instrukcji -
					 instrukcja ta powoduje zapisanie 
    1344				; takze rejestru CS w taki sposob, ze s
					elektor 0040H (czyli 8 * 8) 
    1345				; wpisany do CS wskazuje na deskryptor 
					w tablicy GDT, opisujacy 
    1346				; niniejszy segment. Zatem bedzie dalej
					 wykonywany kod z tego samego 
    1347				; segmentu, ale rejestr CS zawiera tera
					z selektor, a nie adres segmentu. 
    1348				; Rozkaz skoku dalekiego jest kodowany 
					bajtowo poniewaz 
    1349				; w asemblerze brak potrzebnego trybu a
					dresowania 'jmp far PTR ca1' 
    1350 0883  EA			           DB      0EAH 
    1351 0884  0888 R			           DW      tryb_PM 
    1352 0886  0040			           dw      8 * 8       ; selekt
					or wskazujacy na deskryptor 
    1353				                               ; segmen
					tu 'rozkazy' 
    1354 0888  90			tryb_PM:   nop 
    1355				 
    1356				;--------------------------------------
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-42


					----------------------------------- 
    1357				 
    1358				; przeprogramowanie uk?adu 8259, tak by
					 przerwanie z zegara (nr 8 w trybie 
    1359				; rzeczywistym) by?o zwi?zane z nr 32, 
					przerwanie z klawiatury (nr 9) 
    1360				; - z nr 33, itd. 
    1361 0889  E8 08E1 R		           call    przestaw_8259 
    1362				 
    1363				; inicjalizacja stosu - segment stosu d
					la trybu chronionego 
    1364				; opisany jest przez deskryptor 7 
    1365 088C  B8 0038			           mov     ax, 7 * 8 
    1366 088F  8E D0			           mov     ss, ax 
    1367 0891  BC 03E8			           mov     sp, 1000 
    1368				 
    1369				; inicjalizacja rejestrow DS, ES, FS, G
					S - wpisanie selektora wskazujacego na 
    1370				; segment 'nowe_dane' 
    1371 0894  B8 0010			           mov     ax, 2 * 8 
    1372 0897  8E D8			           mov     ds, ax 
    1373 0899  8E C0			           mov     es, ax 
    1374 089B  8E E0			           mov     fs, ax 
    1375 089D  8E E8			           mov     gs, ax 
    1376				 
    1377 089F  E8 0924 R		           call zeruj_bufor_klaw   ; ze
					rowanie bufora klawiatury 
    1378				 
    1379 08A2  FB			           sti                     ; wl
					aczenie przyjmowania przerwan 
    1380				 
    1381				 
    1382				;--------------------------------------
					--------------------------------- 
    1383				; Glowna petla przyjmowania zlecen od u
					zytkownika w trybie chronionym 
    1384				 
    1385				 
    1386				; sprawdz, czy w buforze klawiatury jes
					t kod Esc (1BH) 
    1387				 
    1388 08A3  E8 0ADA R		        call CLRSCR 
    1389 08A6  E8 09B7 R		        call ramka 
    1390 08A9  E8 095E R		        call monitor 
    1391 08AC  E8 0AFC R		        call Base_memory 
    1392 08AF  E8 0B6B R		        call Extd_memory 
    1393 08B2  E8 0BDA R		        call Stat_reg_B 
    1394 08B5  E8 0C5A R			call FLOPY_DRIVE_TYPE 
    1395 08B8				czytaj_od_nowa: 
    1396 08B8  B8 0010			           mov     ax, 2 * 8 
    1397 08BB  8E D8			           mov     ds, ax 
    1398 08BD				klaw14: 
    1399 08BD  8B 0E 00D4 R		           mov     cx, ds:indeks_klaw 
    1400 08C1  E3 FA			           jcxz    klaw14      ; skok, 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-43


					gdy pusty bufor 
    1401 08C3  8B 0E 00D4 R		           mov     cx, ds:indeks_klaw 
    1402 08C7				ptl_klaw3: 
    1403 08C7  BB 0000			           mov     bx, 0 
    1404 08CA				ptl_klaw2: 
    1405 08CA  8A 87 0054 R		           mov     al, ds:bufor_klaw[bx
					] 
    1406 08CE  E8 0924 R		           call zeruj_bufor_klaw 
    1407 08D1  3C 1B			           cmp     al, 1BH 
    1408 08D3  0F 84 08D9 R		           je      byl_Esc 
    1409 08D7  EB DF			           jmp czytaj_od_nowa 
    1410				 
    1411 08D9				byl_esc: 
    1412 08D9  E8 0924 R		           call zeruj_bufor_klaw 
    1413				 
    1414				; przygotowanie do powrotu do trybu rze
					czywistego -  skok daleki 
    1415				; do segmentu kodu (kodowany bajtowo, p
					oniewaz 
    1416				; w asemblerze brak potrzebnego trybu a
					dresowania 'jmp far PTR przelacz_do_RM'
					 
    1417 08DC  EA			           DB      0EAH 
    1418 08DD  0000 R			           DW      przelacz_do_RM 
    1419 08DF  0050			           dw      10 * 8      ; nr poz
					ycji deskryptora wskazuj?cego 
    1420				                               ; segmen
					t rozkazowy 
    1421				 
    1422				;--------------------------------------
					--------------------------------- 
    1423				 
    1424				INCLUDE    PODPROGR.INC 
    1425			     C	; przeprogramowanie uk?adu 8259, tak by
					 przerwanie z zegara (nr 8 w trybie 
    1426			     C	; rzeczywistym) by?o zwi?zane z nr 32, 
					przerwanie z klawiatury (nr 9) 
    1427			     C	; - z nr 33, itd. 
    1428 08E1                        C	przestaw_8259  PROC 
    1429 08E1  B0 11                 C	        mov     al,11H 
    1430 08E3  E6 20                 C	        out     20H,al      ; ladowanie
					 ICW1 (d4=1 - znacznik 
    1431			     C	                            ; wskazujac
					y, ze programujemy ICW1 
    1432			     C	                            ; bit d0=1 
					- znacznik ,ze wystapi ICW4 
    1433 08E5  B0 20                 C	        mov     al,32 
    1434 08E7  E6 21                 C	        out     21H,al 
    1435			     C	                            ; ustawieni
					e bazowego wektora przerwan 
    1436			     C	                            ; (ustawien
					ie ICW2) 
    1437 08E9  B0 04                 C	        mov     al,4 
    1438 08EB  E6 21                 C	        out     21H,al 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-44


    1439			     C	                            ; ICW3 - d2
					=1 - tryb niebuforowany, 8259 master 
    1440 08ED  B0 01                 C	        mov     al,1 
    1441 08EF  E6 21                 C	        out     21H,al 
    1442			     C	                            ; ICW4 - d0
					=1 - potwierdzenie ICW2 jako wektora 
    1443			     C	                            ; przerwan 
    1444 08F1  C3                    C	        ret 
    1445 08F2                        C	przestaw_8259      ENDP 
    1446			     C	;--------------------------------------
					------------------------------------ 
    1447			     C	; wyswietlanie tekstu na ekranie - teks
					t zawarty jest w segmencie danych 
    1448			     C	; dla trybu chronionego (selektor 0010H
					), a offset podany jest w BX 
    1449			     C	; tekst wyswietlany jest w wierszu wska
					zanym przez zmienna ekran_y 
    1450			     C	 
    1451			     C	;        ekran_x    db       0         
					      ; wskaznik nr kolumny do zapisu n
					a ekranie 
    1452			     C	;        ekran_y    db       0         
					      ; wskaznik nr iersza do zapisu na
					 ekranie 
    1453 08F2                        C	wyswietl   PROC 
    1454			     C	                            ; selektor 
					0010H (2 * 8) wskazuje deskryptor segme
					ntu danych dla trybu 
    1455			     C	                            ; chronione
					go ('nowe_dane') 
    1456 08F2  1E                    C	        push    ds 
    1457 08F3  06                    C	        push    es 
    1458 08F4  B8 0010               C	        mov     ax, 2 * 8 
    1459 08F7  8E D8                 C	        mov     ds, ax 
    1460 08F9  B8 0018               C	        mov     ax, 3 * 8   ; selektor 
					pamieci ekranu 
    1461 08FC  8E C0                 C	        mov     es,ax 
    1462 08FE  B0 A0                 C	        mov     al, 160 
    1463 0900  F6 26 00D7 R          C	        mul     byte PTR ds:ekran_y    
					     ; w AX adres ekranu do zapisu 
    1464 0904  8B F8                 C	        mov     di, ax 
    1465 0906  33 C0                 C	        xor     ax,ax 
    1466 0908  A0 00D6 R             C	        mov     al,ds:ekran_x 
    1467 090B  03 F8                 C	        add     di,ax 
    1468 090D  8A 26 0267 R          C	        mov     ah,ds:atr        ; atry
					but wyswietlania 
    1469 0911                        C	ptl_kom: 
    1470 0911  8A 07                 C	        mov     al,ds:[bx]  ; pobranie 
					kolejnego znaku komunikatu 
    1471 0913  0A C0                 C	        or      al, al 
    1472 0915  0F 84 0921 R          C	        jz      koniec_wysw ; bajt zero
					wy wskazuje koniec tekstu 
    1473 0919  26: 89 05             C	        mov     es:[di],ax  ; przeslani
					e znaku do pamieci ekranu 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-45


    1474 091C  43                    C	        inc     bx          ; inkrement
					acja BX 
    1475 091D  47                    C	        inc     di          ; inkrement
					acja DI 
    1476 091E  47                    C	        inc     di          ; inkrement
					acja DI 
    1477 091F  EB F0                 C	        jmp     ptl_kom 
    1478 0921                        C	koniec_wysw: 
    1479			     C	 
    1480 0921  07                    C	        pop     es 
    1481 0922  1F                    C	        pop     ds 
    1482 0923  C3                    C	        ret 
    1483			     C	                            ; przesuwan
					ie calego ekranu o jeden wiersz w gore 
    1484			     C	 
    1485 0924                        C	        wyswietl   ENDP 
    1486			     C	;--------------------------------------
					-------------------------------------- 
    1487			     C	; zerowanie bufora klawiatury i zerowan
					ie wskaznika indeksowego klawiatury 
    1488			     C	 
    1489 0924                        C	zeruj_bufor_klaw   PROC 
    1490 0924  1E                    C	        push    ds 
    1491 0925  53                    C	        push    bx 
    1492 0926  51                    C	        push    cx 
    1493 0927  BB 0010               C	        mov     bx, 2 * 8   ; selektor 
					segmentu 'nowe_dane' 
    1494 092A  8E DB                 C	        mov     ds, bx 
    1495 092C  C7 06 00D4 R 0000     C	        mov     word PTR ds:indeks_klaw
					, 0 
    1496 0932  B9 0080               C	        mov     cx, 128 
    1497 0935  BB 0000               C	        mov     bx, 0 
    1498 0938                        C	        ptl_inic_klaw2: 
    1499 0938  C6 87 0054 R 00       C	        mov     byte PTR ds:bufor_klaw[
					bx], 0 
    1500 093D  43                    C	        inc     bx 
    1501 093E  E2 F8                 C	        loop    ptl_inic_klaw2 
    1502			     C	                            ; wpisywani
					e znaku zachety i wypelnianie spacjami 
					przedostatniego 
    1503			     C	                            ; wiersza e
					kranu 
    1504 0940  BB 0018               C	        mov     bx, 3 * 8   ; selektor 
					pamieci ekranu 
    1505 0943  8E DB                 C	        mov     ds, bx 
    1506 0945  C6 06 0E60 23         C	        mov     byte PTR ds:[160 * 23],
					 '#' 
    1507 094A  B9 004F               C	        mov     cx, 79 
    1508 094D  BB 0002               C	        mov     bx, 2 
    1509 0950                        C	        ptl_wp: 
    1510 0950  C6 87 0E60 20         C	        mov     byte PTR ds:[bx + 160 *
					 23], ' ' 
    1511 0955  83 C3 02              C	        add     bx, 2 
    1512 0958  E2 F6                 C	        loop    ptl_wp 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-46


    1513 095A  59                    C	        pop     cx 
    1514 095B  5B                    C	        pop     bx 
    1515 095C  1F                    C	        pop     ds 
    1516 095D  C3                    C	        ret 
    1517 095E                        C	zeruj_bufor_klaw   ENDP 
    1518			     C	;--------------------------------------
					----------------- 
    1519 095E                        C	MONITOR PROC 
    1520 095E  50                    C	        push ax 
    1521 095F  53                    C	        push bx 
    1522			     C	 
    1523 0960  A0 015D R             C	        mov al,ds:monitorX 
    1524 0963  A2 00D6 R             C	        mov ds:ekran_x,al 
    1525 0966  A0 015E R             C	        mov al,ds:monitorY 
    1526 0969  A2 00D7 R             C	        mov ds:ekran_y,al 
    1527 096C  BB 015F R             C	        mov bx,OFFSET tekst5 
    1528 096F  E8 08F2 R             C	        call wyswietl 
    1529			     C	 
    1530 0972  80 06 00D6 R 32       C	        add ds:ekran_x,50 
    1531			     C	 
    1532 0977  B0 14                 C	        mov al,14h 
    1533 0979  E6 70                 C	        out 70h,al 
    1534 097B  EB 00                 C	        jmp $+2 
    1535 097D  E4 71                 C	        in al,71h 
    1536 097F  24 30                 C	        and al,00110000b 
    1537			     C	 
    1538 0981  3C 00                 C	        cmp al,00000000b 
    1539 0983  0F 85 0990 R          C	        jne monitor_dalej1 
    1540 0987  BB 016D R             C	        mov bx,OFFSET monitor1 
    1541 098A  E8 08F2 R             C	        call wyswietl 
    1542 098D  EB 25 90              C	        jmp monitor_koniec 
    1543 0990                        C	monitor_dalej1: 
    1544 0990  3C 10                 C	        cmp al,00010000b 
    1545 0992  0F 85 099F R          C	        jne monitor_dalej2 
    1546 0996  BB 0178 R             C	        mov bx,OFFSET monitor2 
    1547 0999  E8 08F2 R             C	        call wyswietl 
    1548 099C  EB 16 90              C	        jmp monitor_koniec 
    1549 099F                        C	monitor_dalej2: 
    1550 099F  3C 20                 C	        cmp al,00100000b 
    1551 09A1  0F 85 09AE R          C	        jne monitor_dalej3 
    1552 09A5  BB 0182 R             C	        mov bx,OFFSET monitor3 
    1553 09A8  E8 08F2 R             C	        call wyswietl 
    1554 09AB  EB 07 90              C	        jmp monitor_koniec 
    1555 09AE                        C	monitor_dalej3: 
    1556 09AE  BB 018C R             C	        mov bx,OFFSET monitor4 
    1557 09B1  E8 08F2 R             C	        call wyswietl 
    1558			     C	 
    1559 09B4                        C	monitor_koniec: 
    1560			     C	 
    1561 09B4  58                    C	        pop ax 
    1562 09B5  5B                    C	        pop bx 
    1563 09B6  C3                    C	        ret 
    1564 09B7                        C	MONITOR ENDP 
    1565			     C	;**************************************
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-47


					***************************************
					****** 
    1566 09B7                        C	RAMKA PROC 
    1567 09B7  60                    C	      pusha 
    1568 09B8  06                    C	      push es 
    1569			     C	 
    1570 09B9  B8 0018               C	      mov ax,3*8 
    1571 09BC  8E C0                 C	      mov es,ax 
    1572 09BE  B8 0010               C	      mov ax,2*8 
    1573 09C1  8E D8                 C	      mov ds,ax 
    1574			     C	          ;- 
    1575 09C3  B0 C9                 C	      mov al,201 
    1576 09C5  BF 0000               C	      mov di,0 
    1577 09C8  26: 88 05             C	      mov es:[di],al 
    1578			     C	          ;===== 
    1579 09CB  B9 000F               C	      mov cx,15 
    1580 09CE  BF 0002               C	      mov di,2 
    1581 09D1  B0 CD                 C	      mov al,205 
    1582 09D3                        C	rysuj1: 
    1583 09D3  26: 88 05             C	      mov es:[di],al 
    1584 09D6  83 C7 02              C	      add di,2 
    1585 09D9  E2 F8                 C	      loop rysuj1 
    1586			     C	           ;napis 
    1587 09DB  B9 002F               C	      mov cx,47 
    1588 09DE  BB 0000               C	      mov bx,0 
    1589 09E1                        C	rysuj2: 
    1590 09E1  8A 87 0113 R          C	      mov al,ds:info1[bx] 
    1591 09E5  26: 88 05             C	      mov es:[di],al 
    1592 09E8  83 C7 02              C	      add di,2 
    1593 09EB  43                    C	      inc bx 
    1594 09EC  E2 F3                 C	      loop rysuj2 
    1595			     C	           ;===== 
    1596 09EE  B9 0010               C	      mov cx,16 
    1597 09F1  B0 CD                 C	      mov al,205 
    1598 09F3                        C	rysuj3: 
    1599 09F3  26: 88 05             C	      mov es:[di],al 
    1600 09F6  83 C7 02              C	      add di,2 
    1601 09F9  E2 F8                 C	      loop rysuj3 
    1602			     C	           ;� 
    1603 09FB  B0 BB                 C	      mov al,187 
    1604 09FD  26: 88 05             C	      mov es:[di],al 
    1605 0A00  83 C7 02              C	      add di,2 
    1606			     C	          ;� 
    1607 0A03  B0 BA                 C	      mov al,186 
    1608 0A05  26: 88 05             C	      mov es:[di],al 
    1609 0A08  81 C7 009E            C	      add di,158 
    1610 0A0C  26: 88 05             C	      mov es:[di],al 
    1611 0A0F  83 C7 02              C	      add di,2 
    1612			     C	          ;� 
    1613 0A12  B0 CC                 C	      mov al,204 
    1614 0A14  26: 88 05             C	      mov es:[di],al 
    1615 0A17  83 C7 02              C	      add di,2 
    1616			     C	          ;= 
    1617 0A1A  B0 CD                 C	      mov al,205 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-48


    1618 0A1C  B9 004E               C	      mov cx,78 
    1619 0A1F                        C	rysuj4: 
    1620 0A1F  26: 88 05             C	      mov es:[di],al 
    1621 0A22  83 C7 02              C	      add di,2 
    1622 0A25  E2 F8                 C	      loop rysuj4 
    1623			     C	           ;� 
    1624 0A27  B0 B9                 C	      mov al,185 
    1625 0A29  26: 88 05             C	      mov es:[di],al 
    1626 0A2C  83 C7 02              C	      add di,2 
    1627			     C	           ;� 
    1628 0A2F  B0 BA                 C	      mov al,186 
    1629 0A31  B9 0015               C	      mov cx,21 
    1630 0A34                        C	rysuj5: 
    1631 0A34  26: 88 05             C	      mov es:[di],al 
    1632 0A37  81 C7 009E            C	      add di,158 
    1633 0A3B  26: 88 05             C	      mov es:[di],al 
    1634 0A3E  83 C7 02              C	      add di,2 
    1635 0A41  E2 F1                 C	      loop rysuj5 
    1636			     C	           ;L 
    1637 0A43  B0 C8                 C	      mov al,200 
    1638 0A45  26: 88 05             C	      mov es:[di],al 
    1639 0A48  83 C7 02              C	      add di,2 
    1640			     C	           ;= 
    1641 0A4B  B9 0032               C	      mov cx,50 
    1642 0A4E  B0 CD                 C	      mov al,205 
    1643 0A50                        C	rysuj6: 
    1644 0A50  26: 88 05             C	      mov es:[di],al 
    1645 0A53  83 C7 02              C	      add di,2 
    1646 0A56  E2 F8                 C	      loop rysuj6 
    1647			     C	           ;napis info2 
    1648 0A58  B9 000B               C	      mov cx,11 
    1649 0A5B  BB 0000               C	      mov bx,0 
    1650 0A5E                        C	rysuj7: 
    1651 0A5E  8A 87 0143 R          C	      mov al,ds:info2[bx] 
    1652 0A62  43                    C	      inc bx 
    1653 0A63  26: 88 05             C	      mov es:[di],al 
    1654 0A66  83 C7 02              C	      add di,2 
    1655 0A69  E2 F3                 C	      loop rysuj7 
    1656			     C	           ;= 
    1657 0A6B  B9 0011               C	      mov cx,17 
    1658 0A6E  B0 CD                 C	      mov al,205 
    1659 0A70                        C	rysuj8: 
    1660 0A70  26: 88 05             C	      mov es:[di],al 
    1661 0A73  83 C7 02              C	      add di,2 
    1662 0A76  E2 F8                 C	      loop rysuj8 
    1663			     C	           ;- 
    1664 0A78  B0 BC                 C	      mov al,188 
    1665 0A7A  26: 88 05             C	      mov es:[di],al 
    1666			     C	 
    1667			     C	 
    1668			     C	;--poprawka 
    1669 0A7D  BF 0D20               C	        mov di,3360 
    1670 0A80  B0 CC                 C	        mov al,204 
    1671 0A82  26: 88 05             C	        mov es:[di],al 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-49


    1672 0A85  83 C7 02              C	        add di,2 
    1673			     C	 
    1674 0A88  B9 004E               C	        mov cx,78 
    1675 0A8B  B0 CD                 C	        mov al,205 
    1676 0A8D                        C	poprawka1: 
    1677 0A8D  26: 88 05             C	        mov es:[di],al 
    1678 0A90  83 C7 02              C	        add di,2 
    1679 0A93  E2 F8                 C	        loop poprawka1 
    1680			     C	 
    1681 0A95  B0 B9                 C	        mov al,185 
    1682 0A97  26: 88 05             C	        mov es:[di],al 
    1683			     C	 
    1684 0A9A  BF 0E6A               C	        mov di,3690 
    1685 0A9D  BB 0000               C	        mov bx,0 
    1686 0AA0                        C	poprawka2: 
    1687 0AA0  8A 87 014F R          C	        mov al,ds:tekst8[bx] 
    1688 0AA4  3C 00                 C	        cmp al,0 
    1689 0AA6  0F 84 0AB3 R          C	        je koniecp 
    1690 0AAA  26: 88 05             C	        mov es:[di],al 
    1691 0AAD  83 C7 02              C	        add di,2 
    1692 0AB0  43                    C	        inc bx 
    1693 0AB1  EB ED                 C	        jmp poprawka2 
    1694 0AB3                        C	koniecp: 
    1695 0AB3  A0 01A8 R             C	         mov al,ds:dataX 
    1696 0AB6  A2 00D6 R             C	         mov ds:ekran_x,al 
    1697 0AB9  A0 01A9 R             C	         mov al,ds:dataY 
    1698 0ABC  A2 00D7 R             C	         mov ds:ekran_y,al 
    1699 0ABF  BB 019D R             C	         mov bx,OFFSET tekst1 
    1700 0AC2  E8 08F2 R             C	         call wyswietl 
    1701			     C	 
    1702 0AC5  A0 01B0 R             C	         mov al,ds:czasX 
    1703 0AC8  A2 00D6 R             C	         mov ds:ekran_x,al 
    1704 0ACB  A0 01B1 R             C	         mov al,ds:czasY 
    1705 0ACE  A2 00D7 R             C	         mov ds:ekran_y,al 
    1706 0AD1  BB 01AA R             C	         mov bx,OFFSET tekst2 
    1707 0AD4  E8 08F2 R             C	         call wyswietl 
    1708			     C	 
    1709			     C	 
    1710 0AD7  07                    C	      pop es 
    1711 0AD8  61                    C	      popa 
    1712 0AD9  C3                    C	      ret 
    1713 0ADA                        C	RAMKA ENDP 
    1714			     C	;**************************************
					***************************************
					****** 
    1715 0ADA                        C	CLRSCR PROC 
    1716 0ADA  60                    C	       pusha 
    1717 0ADB  06                    C	       push es 
    1718			     C	 
    1719 0ADC  B8 0018               C	      mov ax,3*8 
    1720 0ADF  8E C0                 C	      mov es,ax 
    1721 0AE1  B8 0010               C	      mov ax,2*8 
    1722 0AE4  8E D8                 C	      mov ds,ax 
    1723			     C	 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-50


    1724 0AE6  8A 26 0267 R          C	        mov ah,ds:Atr 
    1725 0AEA  B0 20                 C	        mov al,' ' 
    1726 0AEC  B9 07D0               C	        mov cx,2000 
    1727 0AEF  BF 0000               C	        mov di,0 
    1728 0AF2                        C	petla_czysc: 
    1729 0AF2  26: 89 05             C	        mov es:[di],ax 
    1730 0AF5  47                    C	        inc di 
    1731 0AF6  47                    C	        inc di 
    1732 0AF7  E2 F9                 C	        loop petla_czysc 
    1733			     C	 
    1734 0AF9  07                    C	        pop es 
    1735 0AFA  61                    C	        popa 
    1736 0AFB  C3                    C	        ret 
    1737 0AFC                        C	CLRSCR ENDP 
    1738			     C	;**************************************
					********************************* 
    1739 0AFC                        C	BASE_MEMORY PROC 
    1740 0AFC  60                    C	        pusha 
    1741 0AFD  06                    C	        push es 
    1742			     C	 
    1743 0AFE  B8 0010               C	        mov ax,2*8 
    1744 0B01  8E D8                 C	        mov ds,ax 
    1745 0B03  B8 0018               C	        mov ax,3*8 
    1746 0B06  8E C0                 C	        mov es,ax 
    1747			     C	 
    1748			     C	 
    1749			     C	                ;odczyt mlodszej czesci
					 pamieci podstawowej 
    1750 0B08  B0 15                 C	        mov al,15h 
    1751 0B0A  E6 70                 C	        out 70h,al 
    1752 0B0C  EB 00                 C	        jmp $+2 
    1753 0B0E  E4 71                 C	        in al,71h 
    1754			     C	                ;zapisanie mlodszej cze
					scni do zmiennej pomoc 
    1755 0B10  A2 0266 R             C	        mov ds:pomoc,al 
    1756			     C	                ;odczytanie starszej cz
					escni pamieci podstawowej 
    1757 0B13  B0 16                 C	        mov al,16h 
    1758 0B15  E6 70                 C	        out 70h,al 
    1759 0B17  EB 00                 C	        jmp $+2 
    1760 0B19  E4 71                 C	        in al,71h 
    1761			     C	                ;wpisanie rozmiaru cale
					j pamieci do AX 
    1762 0B1B  8A E0                 C	        mov ah,al 
    1763 0B1D  A0 0266 R             C	        mov al,ds:pomoc 
    1764			     C	                ;zamiana na dziesietne 
    1765			     C	 
    1766 0B20  BA 0000               C	        mov dx,0 
    1767 0B23  BB 000A               C	        mov bx,10 
    1768 0B26  B9 0000               C	        mov cx,0 
    1769			     C	 
    1770 0B29                        C	dziel_bm: 
    1771 0B29  F7 F3                 C	        div bx 
    1772 0B2B  41                    C	        inc cx 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-51


    1773 0B2C  80 C2 30              C	        add dl,'0' 
    1774 0B2F  52                    C	        push dx 
    1775 0B30  3D 0000               C	        cmp ax,0 
    1776			     C	                ;gdy czesc calkowita  =
					 0 
    1777 0B33  0F 84 0B3C R          C	        je dalej_bm 
    1778 0B37  BA 0000               C	        mov dx,0 
    1779 0B3A  EB ED                 C	        jmp dziel_bm 
    1780			     C	 
    1781 0B3C                        C	dalej_bm: 
    1782			     C	                ;wyswietlenie na ekrani
					e 
    1783 0B3C  A0 01BF R             C	        mov al,ds:Base_memoryX 
    1784 0B3F  A2 00D6 R             C	        mov ds:ekran_x,al 
    1785 0B42  A0 01C0 R             C	        mov al,ds:Base_memoryY 
    1786 0B45  A2 00D7 R             C	        mov ds:ekran_y,al 
    1787 0B48  BB 01B2 R             C	        mov bx,OFFSET tekst3 
    1788 0B4B  E8 08F2 R             C	        call wyswietl 
    1789			     C	 
    1790 0B4E  B0 A0                 C	        mov al,160 
    1791 0B50  F6 26 00D7 R          C	        mul byte PTR ds:ekran_y 
    1792 0B54  8B F8                 C	        mov di,ax 
    1793 0B56  33 C0                 C	        xor ax,ax 
    1794 0B58  A0 00D6 R             C	        mov al,ds:ekran_x 
    1795 0B5B  04 32                 C	        add al,50 
    1796 0B5D  03 F8                 C	        add di,ax 
    1797			     C	 
    1798 0B5F                        C	dalej_bm2: 
    1799			     C	                ;wyswietlanie wartosci 
					base memory 
    1800 0B5F                        C	wyswietl_bm: 
    1801 0B5F  5A                    C	        pop dx 
    1802 0B60  26: 88 15             C	        mov es:[di],dl 
    1803 0B63  83 C7 02              C	        add di,2 
    1804 0B66  E2 F7                 C	        loop wyswietl_bm 
    1805			     C	 
    1806 0B68  07                    C	        pop es 
    1807 0B69  61                    C	        popa 
    1808 0B6A  C3                    C	        ret 
    1809 0B6B                        C	BASE_MEMORY ENDP 
    1810			     C	;**************************************
					***************************************
					********** 
    1811 0B6B                        C	EXTD_MEMORY PROC 
    1812 0B6B  60                    C	        pusha 
    1813 0B6C  06                    C	        push es 
    1814			     C	 
    1815 0B6D  B8 0010               C	        mov ax,2*8 
    1816 0B70  8E D8                 C	        mov ds,ax 
    1817 0B72  B8 0018               C	        mov ax,3*8 
    1818 0B75  8E C0                 C	        mov es,ax 
    1819			     C	 
    1820			     C	                ;odczyt mlodszej czesci
					 pamieci podstawowej 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-52


    1821 0B77  B0 17                 C	        mov al,17h 
    1822 0B79  E6 70                 C	        out 70h,al 
    1823 0B7B  EB 00                 C	        jmp $+2 
    1824 0B7D  E4 71                 C	        in al,71h 
    1825			     C	                ;zapisanie mlodszej cze
					scni do zmiennej pomoc 
    1826 0B7F  A2 0266 R             C	        mov ds:pomoc,al 
    1827			     C	                ;odczytanie starszej cz
					escni pamieci podstawowej 
    1828 0B82  B0 18                 C	        mov al,18h 
    1829 0B84  E6 70                 C	        out 70h,al 
    1830 0B86  EB 00                 C	        jmp $+2 
    1831 0B88  E4 71                 C	        in al,71h 
    1832			     C	                ;wpisanie rozmiaru cale
					j pamieci do AX 
    1833 0B8A  8A E0                 C	        mov ah,al 
    1834 0B8C  A0 0266 R             C	        mov al,ds:pomoc 
    1835			     C	                ;zamiana na dziesietne 
    1836			     C	 
    1837 0B8F  BA 0000               C	        mov dx,0 
    1838 0B92  BB 000A               C	        mov bx,10 
    1839 0B95  B9 0000               C	        mov cx,0 
    1840			     C	 
    1841 0B98                        C	dziel_em: 
    1842 0B98  F7 F3                 C	        div bx 
    1843 0B9A  41                    C	        inc cx 
    1844 0B9B  80 C2 30              C	        add dl,'0' 
    1845 0B9E  52                    C	        push dx 
    1846 0B9F  3D 0000               C	        cmp ax,0 
    1847			     C	                ;gdy czesc calkowita  =
					 0 
    1848 0BA2  0F 84 0BAB R          C	        je dalej_em 
    1849 0BA6  BA 0000               C	        mov dx,0 
    1850 0BA9  EB ED                 C	        jmp dziel_em 
    1851			     C	 
    1852 0BAB                        C	dalej_em: 
    1853			     C	                ;wyswietlenie na ekrani
					e 
    1854 0BAB  A0 01D2 R             C	        mov al,ds:Ext_memoryX 
    1855 0BAE  A2 00D6 R             C	        mov ds:ekran_x,al 
    1856 0BB1  A0 01D3 R             C	        mov al,ds:Ext_memoryY 
    1857 0BB4  A2 00D7 R             C	        mov ds:ekran_y,al 
    1858 0BB7  BB 01C1 R             C	        mov bx,OFFSET tekst4 
    1859 0BBA  E8 08F2 R             C	        call wyswietl 
    1860			     C	 
    1861			     C	 
    1862 0BBD  B0 A0                 C	        mov al,160 
    1863 0BBF  F6 26 00D7 R          C	        mul byte PTR ds:ekran_y 
    1864 0BC3  8B F8                 C	        mov di,ax 
    1865 0BC5  33 C0                 C	        xor ax,ax 
    1866 0BC7  A0 00D6 R             C	        mov al,ds:ekran_x 
    1867 0BCA  04 32                 C	        add al,50 
    1868 0BCC  03 F8                 C	        add di,ax 
    1869			     C	 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-53


    1870 0BCE                        C	dalej_em2: 
    1871 0BCE                        C	wyswietl_em: 
    1872 0BCE  5A                    C	        pop dx 
    1873 0BCF  26: 88 15             C	        mov es:[di],dl 
    1874 0BD2  83 C7 02              C	        add di,2 
    1875 0BD5  E2 F7                 C	        loop wyswietl_em 
    1876			     C	 
    1877 0BD7  07                    C	        pop es 
    1878 0BD8  61                    C	        popa 
    1879 0BD9  C3                    C	        ret 
    1880 0BDA                        C	EXTD_MEMORY ENDP 
    1881			     C	;**************************************
					***************************************
					* 
    1882 0BDA                        C	STAT_REG_B PROC 
    1883 0BDA  60                    C	        pusha 
    1884 0BDB  06                    C	        push es 
    1885			     C	 
    1886 0BDC  B8 0010               C	        mov ax,2*8 
    1887 0BDF  8E D8                 C	        mov ds,ax 
    1888			     C	 
    1889 0BE1  B0 0B                 C	        mov al,0Bh 
    1890 0BE3  E6 70                 C	        out 70h,al 
    1891 0BE5  EB 00                 C	        jmp $+2 
    1892 0BE7  E4 71                 C	        in al,71h 
    1893			     C	           ;wyswietlenie napisu 'data m
					ode' 
    1894 0BE9  A2 0266 R             C	        mov ds:pomoc,al 
    1895 0BEC  50                    C	        push ax 
    1896 0BED  A0 024F R             C	        mov al,ds:data_modeX 
    1897 0BF0  A2 00D6 R             C	        mov ds:ekran_x,al 
    1898 0BF3  A0 0250 R             C	        mov al,ds:data_modeY 
    1899 0BF6  A2 00D7 R             C	        mov ds:ekran_y,al 
    1900 0BF9  58                    C	        pop ax 
    1901 0BFA  BB 0239 R             C	        mov bx,OFFSET tekst6 
    1902 0BFD  E8 08F2 R             C	        call wyswietl 
    1903			     C	         
    1904 0C00  83 C7 02              C	        add di,2 
    1905			     C	 
    1906 0C03  24 04                 C	        and al,00000100b 
    1907			     C	 
    1908 0C05  3C 04                 C	        cmp al,00000100b 
    1909			     C	 
    1910 0C07  0F 84 0C19 R          C	        je dalej_dm2 
    1911			     C	                ;BCD 
    1912			     C	 
    1913 0C0B  BB 024B R             C	        mov bx,OFFSET ZBCD 
    1914 0C0E  80 06 00D6 R 32       C	        add ds:ekran_x,50 
    1915 0C13  E8 08F2 R             C	        call wyswietl 
    1916 0C16  EB 0C 90              C	        jmp dalej_dm3 
    1917			     C	         
    1918 0C19                        C	dalej_dm2: 
    1919 0C19  BB 0244 R             C	        mov bx,OFFSET Zbinary 
    1920 0C1C  80 06 00D6 R 32       C	        add ds:ekran_x,50 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-54


    1921 0C21  E8 08F2 R             C	        call wyswietl 
    1922 0C24                        C	dalej_dm3: 
    1923			     C	 
    1924			     C	 
    1925			     C	;;;---------------hour mode--------- 
    1926			     C	 
    1927 0C24  50                    C	        push ax 
    1928 0C25  A0 0264 R             C	        mov al,ds:hour_modeX 
    1929 0C28  A2 00D6 R             C	        mov ds:ekran_x,al 
    1930 0C2B  A0 0265 R             C	        mov al,ds:hour_modeY 
    1931 0C2E  A2 00D7 R             C	        mov ds:ekran_y,al 
    1932 0C31  58                    C	        pop ax 
    1933			     C	 
    1934 0C32  BB 0251 R             C	        mov bx,OFFSET tekst7 
    1935			     C	                ;wyswietlenie napisu 'h
					our mode' 
    1936 0C35  E8 08F2 R             C	        call wyswietl 
    1937			     C	 
    1938 0C38  A0 0266 R             C	        mov al,ds:pomoc 
    1939 0C3B  24 02                 C	        and al,00000010b 
    1940 0C3D  3C 02                 C	        cmp al,00000010b 
    1941 0C3F  80 06 00D6 R 32       C	        add ds:ekran_x,50 
    1942 0C44  0F 84 0C51 R          C	        je dalej_hm2 
    1943			     C	                ;12 godzinny 
    1944 0C48  BB 025C R             C	        mov bx,OFFSET godz1 
    1945 0C4B  E8 08F2 R             C	        call wyswietl 
    1946 0C4E  EB 07 90              C	        jmp dalej_hm3 
    1947			     C	 
    1948 0C51                        C	dalej_hm2: 
    1949 0C51  BB 0260 R             C	        mov bx,OFFSET godz2 
    1950			     C	                ;24 godzinny 
    1951 0C54  E8 08F2 R             C	        call wyswietl 
    1952			     C	         
    1953 0C57                        C	dalej_hm3: 
    1954			     C	 
    1955			     C	 
    1956 0C57  07                    C	        pop es 
    1957 0C58  61                    C	        popa 
    1958 0C59  C3                    C	        ret 
    1959 0C5A                        C	STAT_REG_B ENDP 
    1960			     C	;**************************************
					********************************* 
    1961 0C5A                        C	FLOPY_DRIVE_TYPE PROC 
    1962 0C5A  60                    C	        pusha 
    1963 0C5B  06                    C	        push es 
    1964			     C	 
    1965 0C5C  B8 0010               C		mov ax,2*8 
    1966 0C5F  8E D8                 C		mov ds,ax         
    1967			     C	 
    1968 0C61  B0 10                 C	        mov al,10h 
    1969 0C63  E6 70                 C	        out 70h,al 
    1970 0C65  EB 00                 C	        jmp $+2 
    1971 0C67  E4 71                 C	        in al,71h 
    1972			     C	            ;w zmiennej pomoc mamy info
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-55


					rmacje dotyczace floppy 
    1973 0C69  A2 0266 R             C	        mov ds:pomoc,al 
    1974			     C	            ;pierwszy 
    1975			     C	 
    1976 0C6C  50                    C		push ax 
    1977 0C6D  A0 0235 R             C	        mov al,ds:FirstFX 
    1978 0C70  A2 00D6 R             C	        mov ds:ekran_x,al 
    1979 0C73  A0 0236 R             C	        mov al,ds:FirstFY 
    1980 0C76  A2 00D7 R             C	        mov ds:ekran_y,al 
    1981 0C79  58                    C	        pop ax 
    1982			     C	 
    1983 0C7A  BB 01D4 R             C	        mov bx,OFFSET first_floppy 
    1984			     C			;wyswietlenie napisu fi
					rst_floppy 
    1985 0C7D  E8 08F2 R             C		call wyswietl 
    1986			     C	 
    1987 0C80  A0 0266 R             C	        mov al,ds:pomoc 
    1988 0C83  C0 E8 04              C	        shr al,4 
    1989 0C86  E8 0CA8 R             C	        call FLOPPY_POMOC 
    1990			     C	 
    1991 0C89  50                    C		push ax 
    1992 0C8A  A0 0237 R             C	        mov al,ds:SecondFX 
    1993 0C8D  A2 00D6 R             C	        mov ds:ekran_x,al 
    1994 0C90  A0 0238 R             C	        mov al,ds:SecondFY 
    1995 0C93  A2 00D7 R             C	        mov ds:ekran_y,al 
    1996 0C96  58                    C	        pop ax 
    1997			     C	 
    1998 0C97  BB 01E2 R             C	        mov bx,OFFSET second_floppy 
    1999			     C			; wyswietlenie napisu s
					econd_floppy 
    2000 0C9A  E8 08F2 R             C		call wyswietl         
    2001			     C	 
    2002 0C9D  A0 0266 R             C	        mov al,ds:pomoc 
    2003 0CA0  24 0F                 C	        and al,0fh 
    2004 0CA2  E8 0CA8 R             C	        call FLOPPY_POMOC 
    2005 0CA5  07                    C	        pop es 
    2006 0CA6  61                    C	        popa 
    2007 0CA7  C3                    C	        ret 
    2008 0CA8                        C	FLOPY_DRIVE_TYPE ENDP 
    2009			     C	;**************************************
					************************* 
    2010 0CA8                        C	FLOPPY_POMOC PROC 
    2011			     C	 
    2012 0CA8  80 06 00D6 R 32       C	        add ds:ekran_x,50 
    2013 0CAD  83 C7 02              C		add di,2 
    2014 0CB0  3C 01                 C		cmp al,01h 
    2015 0CB2  0F 84 0CD1 R          C	        je fp1 
    2016 0CB6  3C 02                 C		cmp al,02h 
    2017 0CB8  0F 84 0CDA R          C		je fp2 
    2018 0CBC  3C 03                 C		cmp al,03h 
    2019 0CBE  0F 84 0CE3 R          C		je fp3 
    2020 0CC2  3C 04                 C		cmp al,04h 
    2021 0CC4  0F 84 0CEC R          C		je fp4 
    2022 0CC8  3C 05                 C		cmp al,05h 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-56


    2023 0CCA  0F 84 0CF5 R          C		je fp5 
    2024 0CCE  EB 2E 90              C		jmp fp6 
    2025			     C	 
    2026			     C	 
    2027			     C	 
    2028 0CD1                        C	fp1: 
    2029 0CD1  BB 01FA R             C	        mov bx,OFFSET floppy2 
    2030 0CD4  E8 08F2 R             C		call wyswietl 
    2031 0CD7  EB 2E 90              C	        jmp koniec_fp 
    2032			     C	         
    2033 0CDA                        C	fp2: 
    2034 0CDA  BB 0206 R             C	        mov bx,OFFSET floppy3 
    2035 0CDD  E8 08F2 R             C		call wyswietl 
    2036 0CE0  EB 25 90              C	        jmp koniec_fp 
    2037			     C	 
    2038 0CE3                        C	fp3: 
    2039 0CE3  BB 0212 R             C	        mov bx,OFFSET floppy4 
    2040 0CE6  E8 08F2 R             C		call wyswietl 
    2041 0CE9  EB 1C 90              C	        jmp koniec_fp 
    2042			     C	 
    2043 0CEC                        C	fp4: 
    2044 0CEC  BB 021D R             C	        mov bx,OFFSET floppy5 
    2045 0CEF  E8 08F2 R             C		call wyswietl 
    2046 0CF2  EB 13 90              C	        jmp koniec_fp 
    2047			     C	 
    2048 0CF5                        C	fp5: 
    2049 0CF5  BB 0229 R             C	        mov bx,OFFSET floppy6 
    2050 0CF8  E8 08F2 R             C		call wyswietl 
    2051 0CFB  EB 0A 90              C	        jmp koniec_fp 
    2052			     C	 
    2053 0CFE                        C	fp6: 
    2054 0CFE  BB 01F1 R             C	        mov bx,OFFSET floppy1 
    2055 0D01  E8 08F2 R             C		call wyswietl 
    2056 0D04  EB 01 90              C	        jmp koniec_fp 
    2057			     C	 
    2058 0D07                        C	koniec_fp: 
    2059			     C	 
    2060 0D07  C3                    C	        ret 
    2061 0D08                        C	FLOPPY_POMOC ENDP 
    2062			     C	;**************************************
					***************************************
					******** 
    2063			     C	;ILE_FLOPPY PROC 
    2064			     C	;	pusha 
    2065			     C	;	push es 
    2066			     C	;	 
    2067			     C	;	mov ax,0B800h 
    2068			     C	;	mov es,ax 
    2069			     C	;	mov di,gdzie_ile_floppy 
    2070			     C	; 
    2071			     C	;	mov al,14h 
    2072			     C	;	out 70h,al 
    2073			     C	;	jmp $+2 
    2074			     C	;	in al,70h 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-57


    2075			     C	; 
    2076			     C	;	and al,11000000b 
    2077			     C	; 
    2078			     C	;	cmp al,00000000b 
    2079			     C	;	jne dalej_if1 
    2080			     C	;	mov dl,'1' 
    2081			     C	;	mov es:di,dl 
    2082			     C	;	jmp koniec_if 
    2083			     C	; 
    2084			     C	;dalej_if1: 
    2085			     C	;	cmp al,01000000b	 
    2086			     C	;	jne dalej_if2 
    2087			     C	;	mov dl,'2' 
    2088			     C	;	mov es:di,dl 
    2089			     C	;	jmp koniec_if 
    2090			     C	; 
    2091			     C	;dalej_if2: 
    2092			     C	;	cmp al,10000000b	 
    2093			     C	;	jne dalej_if3 
    2094			     C	;	mov dl,'3' 
    2095			     C	;	mov es:di,dl 
    2096			     C	;	jmp koniec_if 
    2097			     C	; 
    2098			     C	; 
    2099			     C	;dalej_if3: 
    2100			     C	;	mov dl,'4' 
    2101			     C	;	mov es:di,dl 
    2102			     C	; 
    2103			     C	;koniec_if: 
    2104			     C	;	pop es 
    2105			     C	;	popa 
    2106			     C	;	ret 
    2107			     C	;ILE_FLOPPY ENDP 
    2108			     C	 
    2109			     C	 
    2110			     C	 
    2111			     C	 
    2112			     C	 
    2113			     C	 
    2114			     C	 
    2115			     C	 
    2116			     C	 
    2117			     C	 
    2118			     C	 
    2119				 
    2120				; plik PODPROGR.INC zawiera podprogram 
					zmiany trybu ukladu 8259 
    2121				; oraz podprogram wyswietlania tekstu n
					a ekranie w trybie chronionym 
    2122				 
    2123				 
    2124 0D08				rozkazy_end    LABEL near 
    2125 0D08				rozkazy    ENDS 
    2126				 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-58


    2127				;--------------------------------------
					-------------------------------- 
    2128				 
    2129 0000				roz_zak    SEGMENT use16 
    2130				           ASSUME  cs:roz_zak 
    2131				; rozkazy zawarte w tym segmencie wykon
					ywane sa bezposrednio przed 
    2132				; przejsciem z trybu chronionego do try
					bu rzeczywistego 
    2133 0000  90			przelacz_do_RM:     nop 
    2134				 
    2135				; przywr�cenie tradycyjnych numer�w
					 przerwa� 
    2136 0001  FA			           cli                 ; wy??cz
					enie przyjmowania przerwa� 
    2137 0002  B0 11			           mov     al,11H 
    2138 0004  E6 20			           out     20H,al 
    2139 0006  B0 08			           mov     al,8 
    2140 0008  E6 21			           out     21H,al 
    2141 000A  B0 04			           mov     al,4 
    2142 000C  E6 21			           out     21H,al 
    2143 000E  B0 01			           mov     al,1 
    2144 0010  E6 21			           out     21H,al      ; ladowa
					nie ICW4 
    2145 0012  B0 BC			           mov     al,0BCH 
    2146 0014  E6 21			           out     21H,al 
    2147				 
    2148				; przed przejsciem do trybu rzeczywiste
					go rejestry segmentowe powinny 
    2149				; zawierac selektory wskazujace fikcyjn
					y segment danych (zob. opis 
    2150				; deskryptora 10) 
    2151 0016  B8 0048			           mov     ax, 9 * 8   ; deskry
					ptor na pozycji nr 9 wskazuje 
    2152				                               ; fikcyj
					ny segment danych 
    2153 0019  8E D8			           mov     ds,ax 
    2154 001B  8E C0			           mov     es,ax 
    2155 001D  8E D0			           mov     ss,ax 
    2156 001F  8E E0			           mov     fs, ax 
    2157 0021  8E E8			           mov     gs, ax 
    2158				 
    2159				; zerowanie bitu PG w CR0 
    2160 0023  66| 0F 20 C0		           mov     eax, CR0 
    2161 0027  66| 25 7FFFFFFF		           and     eax, 7FFFFFFFH 
    2162 002D  66| 0F 22 C0		           mov     CR0, eax 
    2163				 
    2164				; zerowanie rejestru CR3 
    2165 0031  66| B8 00000000		           mov     eax, 0 
    2166 0037  66| 0F 22 D8		           mov     CR3, eax 
    2167				 
    2168				; zerowanie bitu PE w rejestrze CR0 (wl
					aczenie trybu rzeczywistego) 
    2169 003B  66| 0F 20 C0		           mov     eax, CR0 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-59


    2170 003F  66| 83 E0 FE		           and     eax,0FFFFFFFEH 
    2171 0043  66| 0F 22 C0		           mov     CR0, eax 
    2172				 
    2173 0047  EA 06DD ---- R		           jmp     far PTR ptt3 
    2174				 
    2175 004C				roz_zak    ENDS 
    2176				 
    2177				;--------------------------------------
					--------------------------------- 
    2178 0000				obsl_int   SEGMENT use16 
    2179				           ASSUME  cs:obsl_int 
    2180				 
    2181				; Ka�demu przerwaniu odpowiadaj? 3 ro
					zkazy zajmuj?ce ??cznie 7 bajt�w. 
    2182				; Pierwszy z tych rozkaz�w zapami?tuj
					e rejestr CX na stosie, za? nast?pny 
    2183				; wpisuje do CX nr przerwania lub wyj?t
					ku, co pozwala, w dalszej cz??ci 
    2184				; procedury obs?ugi, zidentyfikowa? prz
					yczyn? przerwania i ewentualnie 
    2185				; podj?? dzia?ania w?a?ciwe dla zaistni
					a?ego zdarzenia. 
    2186				 
    2187 = 0000				xpom=0 
    2188				           REPT   128 
    2189				           push    cx          ; nr prz
					erwania lub wyj?tku 
    2190				           mov     cx,xpom 
    2191				           jmp     proc_obsl 
    2192				xpom=xpom+1 
    2193				           ENDM 
    2194 0000  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2195 0001  B9 0000               1	           mov     cx,xpom 
    2196 0004  E9 0400 R             1	           jmp     proc_obsl 
    2197 0007  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2198 0008  B9 0001               1	           mov     cx,xpom 
    2199 000B  E9 0400 R             1	           jmp     proc_obsl 
    2200 000E  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2201 000F  B9 0002               1	           mov     cx,xpom 
    2202 0012  E9 0400 R             1	           jmp     proc_obsl 
    2203 0015  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2204 0016  B9 0003               1	           mov     cx,xpom 
    2205 0019  E9 0400 R             1	           jmp     proc_obsl 
    2206 001C  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2207 001D  B9 0004               1	           mov     cx,xpom 
    2208 0020  E9 0400 R             1	           jmp     proc_obsl 
    2209 0023  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2210 0024  B9 0005               1	           mov     cx,xpom 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-60


    2211 0027  E9 0400 R             1	           jmp     proc_obsl 
    2212 002A  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2213 002B  B9 0006               1	           mov     cx,xpom 
    2214 002E  E9 0400 R             1	           jmp     proc_obsl 
    2215 0031  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2216 0032  B9 0007               1	           mov     cx,xpom 
    2217 0035  E9 0400 R             1	           jmp     proc_obsl 
    2218 0038  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2219 0039  B9 0008               1	           mov     cx,xpom 
    2220 003C  E9 0400 R             1	           jmp     proc_obsl 
    2221 003F  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2222 0040  B9 0009               1	           mov     cx,xpom 
    2223 0043  E9 0400 R             1	           jmp     proc_obsl 
    2224 0046  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2225 0047  B9 000A               1	           mov     cx,xpom 
    2226 004A  E9 0400 R             1	           jmp     proc_obsl 
    2227 004D  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2228 004E  B9 000B               1	           mov     cx,xpom 
    2229 0051  E9 0400 R             1	           jmp     proc_obsl 
    2230 0054  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2231 0055  B9 000C               1	           mov     cx,xpom 
    2232 0058  E9 0400 R             1	           jmp     proc_obsl 
    2233 005B  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2234 005C  B9 000D               1	           mov     cx,xpom 
    2235 005F  E9 0400 R             1	           jmp     proc_obsl 
    2236 0062  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2237 0063  B9 000E               1	           mov     cx,xpom 
    2238 0066  E9 0400 R             1	           jmp     proc_obsl 
    2239 0069  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2240 006A  B9 000F               1	           mov     cx,xpom 
    2241 006D  E9 0400 R             1	           jmp     proc_obsl 
    2242 0070  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2243 0071  B9 0010               1	           mov     cx,xpom 
    2244 0074  E9 0400 R             1	           jmp     proc_obsl 
    2245 0077  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2246 0078  B9 0011               1	           mov     cx,xpom 
    2247 007B  E9 0400 R             1	           jmp     proc_obsl 
    2248 007E  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2249 007F  B9 0012               1	           mov     cx,xpom 
    2250 0082  E9 0400 R             1	           jmp     proc_obsl 
    2251 0085  51                    1	           push    cx          ; nr prz
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-61


					erwania lub wyj?tku 
    2252 0086  B9 0013               1	           mov     cx,xpom 
    2253 0089  E9 0400 R             1	           jmp     proc_obsl 
    2254 008C  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2255 008D  B9 0014               1	           mov     cx,xpom 
    2256 0090  E9 0400 R             1	           jmp     proc_obsl 
    2257 0093  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2258 0094  B9 0015               1	           mov     cx,xpom 
    2259 0097  E9 0400 R             1	           jmp     proc_obsl 
    2260 009A  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2261 009B  B9 0016               1	           mov     cx,xpom 
    2262 009E  E9 0400 R             1	           jmp     proc_obsl 
    2263 00A1  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2264 00A2  B9 0017               1	           mov     cx,xpom 
    2265 00A5  E9 0400 R             1	           jmp     proc_obsl 
    2266 00A8  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2267 00A9  B9 0018               1	           mov     cx,xpom 
    2268 00AC  E9 0400 R             1	           jmp     proc_obsl 
    2269 00AF  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2270 00B0  B9 0019               1	           mov     cx,xpom 
    2271 00B3  E9 0400 R             1	           jmp     proc_obsl 
    2272 00B6  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2273 00B7  B9 001A               1	           mov     cx,xpom 
    2274 00BA  E9 0400 R             1	           jmp     proc_obsl 
    2275 00BD  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2276 00BE  B9 001B               1	           mov     cx,xpom 
    2277 00C1  E9 0400 R             1	           jmp     proc_obsl 
    2278 00C4  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2279 00C5  B9 001C               1	           mov     cx,xpom 
    2280 00C8  E9 0400 R             1	           jmp     proc_obsl 
    2281 00CB  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2282 00CC  B9 001D               1	           mov     cx,xpom 
    2283 00CF  E9 0400 R             1	           jmp     proc_obsl 
    2284 00D2  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2285 00D3  B9 001E               1	           mov     cx,xpom 
    2286 00D6  E9 0400 R             1	           jmp     proc_obsl 
    2287 00D9  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2288 00DA  B9 001F               1	           mov     cx,xpom 
    2289 00DD  E9 0400 R             1	           jmp     proc_obsl 
    2290 00E0  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2291 00E1  B9 0020               1	           mov     cx,xpom 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-62


    2292 00E4  E9 0400 R             1	           jmp     proc_obsl 
    2293 00E7  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2294 00E8  B9 0021               1	           mov     cx,xpom 
    2295 00EB  E9 0400 R             1	           jmp     proc_obsl 
    2296 00EE  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2297 00EF  B9 0022               1	           mov     cx,xpom 
    2298 00F2  E9 0400 R             1	           jmp     proc_obsl 
    2299 00F5  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2300 00F6  B9 0023               1	           mov     cx,xpom 
    2301 00F9  E9 0400 R             1	           jmp     proc_obsl 
    2302 00FC  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2303 00FD  B9 0024               1	           mov     cx,xpom 
    2304 0100  E9 0400 R             1	           jmp     proc_obsl 
    2305 0103  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2306 0104  B9 0025               1	           mov     cx,xpom 
    2307 0107  E9 0400 R             1	           jmp     proc_obsl 
    2308 010A  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2309 010B  B9 0026               1	           mov     cx,xpom 
    2310 010E  E9 0400 R             1	           jmp     proc_obsl 
    2311 0111  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2312 0112  B9 0027               1	           mov     cx,xpom 
    2313 0115  E9 0400 R             1	           jmp     proc_obsl 
    2314 0118  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2315 0119  B9 0028               1	           mov     cx,xpom 
    2316 011C  E9 0400 R             1	           jmp     proc_obsl 
    2317 011F  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2318 0120  B9 0029               1	           mov     cx,xpom 
    2319 0123  E9 0400 R             1	           jmp     proc_obsl 
    2320 0126  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2321 0127  B9 002A               1	           mov     cx,xpom 
    2322 012A  E9 0400 R             1	           jmp     proc_obsl 
    2323 012D  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2324 012E  B9 002B               1	           mov     cx,xpom 
    2325 0131  E9 0400 R             1	           jmp     proc_obsl 
    2326 0134  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2327 0135  B9 002C               1	           mov     cx,xpom 
    2328 0138  E9 0400 R             1	           jmp     proc_obsl 
    2329 013B  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2330 013C  B9 002D               1	           mov     cx,xpom 
    2331 013F  E9 0400 R             1	           jmp     proc_obsl 
    2332 0142  51                    1	           push    cx          ; nr prz
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-63


					erwania lub wyj?tku 
    2333 0143  B9 002E               1	           mov     cx,xpom 
    2334 0146  E9 0400 R             1	           jmp     proc_obsl 
    2335 0149  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2336 014A  B9 002F               1	           mov     cx,xpom 
    2337 014D  E9 0400 R             1	           jmp     proc_obsl 
    2338 0150  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2339 0151  B9 0030               1	           mov     cx,xpom 
    2340 0154  E9 0400 R             1	           jmp     proc_obsl 
    2341 0157  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2342 0158  B9 0031               1	           mov     cx,xpom 
    2343 015B  E9 0400 R             1	           jmp     proc_obsl 
    2344 015E  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2345 015F  B9 0032               1	           mov     cx,xpom 
    2346 0162  E9 0400 R             1	           jmp     proc_obsl 
    2347 0165  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2348 0166  B9 0033               1	           mov     cx,xpom 
    2349 0169  E9 0400 R             1	           jmp     proc_obsl 
    2350 016C  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2351 016D  B9 0034               1	           mov     cx,xpom 
    2352 0170  E9 0400 R             1	           jmp     proc_obsl 
    2353 0173  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2354 0174  B9 0035               1	           mov     cx,xpom 
    2355 0177  E9 0400 R             1	           jmp     proc_obsl 
    2356 017A  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2357 017B  B9 0036               1	           mov     cx,xpom 
    2358 017E  E9 0400 R             1	           jmp     proc_obsl 
    2359 0181  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2360 0182  B9 0037               1	           mov     cx,xpom 
    2361 0185  E9 0400 R             1	           jmp     proc_obsl 
    2362 0188  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2363 0189  B9 0038               1	           mov     cx,xpom 
    2364 018C  E9 0400 R             1	           jmp     proc_obsl 
    2365 018F  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2366 0190  B9 0039               1	           mov     cx,xpom 
    2367 0193  E9 0400 R             1	           jmp     proc_obsl 
    2368 0196  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2369 0197  B9 003A               1	           mov     cx,xpom 
    2370 019A  E9 0400 R             1	           jmp     proc_obsl 
    2371 019D  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2372 019E  B9 003B               1	           mov     cx,xpom 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-64


    2373 01A1  E9 0400 R             1	           jmp     proc_obsl 
    2374 01A4  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2375 01A5  B9 003C               1	           mov     cx,xpom 
    2376 01A8  E9 0400 R             1	           jmp     proc_obsl 
    2377 01AB  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2378 01AC  B9 003D               1	           mov     cx,xpom 
    2379 01AF  E9 0400 R             1	           jmp     proc_obsl 
    2380 01B2  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2381 01B3  B9 003E               1	           mov     cx,xpom 
    2382 01B6  E9 0400 R             1	           jmp     proc_obsl 
    2383 01B9  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2384 01BA  B9 003F               1	           mov     cx,xpom 
    2385 01BD  E9 0400 R             1	           jmp     proc_obsl 
    2386 01C0  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2387 01C1  B9 0040               1	           mov     cx,xpom 
    2388 01C4  E9 0400 R             1	           jmp     proc_obsl 
    2389 01C7  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2390 01C8  B9 0041               1	           mov     cx,xpom 
    2391 01CB  E9 0400 R             1	           jmp     proc_obsl 
    2392 01CE  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2393 01CF  B9 0042               1	           mov     cx,xpom 
    2394 01D2  E9 0400 R             1	           jmp     proc_obsl 
    2395 01D5  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2396 01D6  B9 0043               1	           mov     cx,xpom 
    2397 01D9  E9 0400 R             1	           jmp     proc_obsl 
    2398 01DC  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2399 01DD  B9 0044               1	           mov     cx,xpom 
    2400 01E0  E9 0400 R             1	           jmp     proc_obsl 
    2401 01E3  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2402 01E4  B9 0045               1	           mov     cx,xpom 
    2403 01E7  E9 0400 R             1	           jmp     proc_obsl 
    2404 01EA  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2405 01EB  B9 0046               1	           mov     cx,xpom 
    2406 01EE  E9 0400 R             1	           jmp     proc_obsl 
    2407 01F1  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2408 01F2  B9 0047               1	           mov     cx,xpom 
    2409 01F5  E9 0400 R             1	           jmp     proc_obsl 
    2410 01F8  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2411 01F9  B9 0048               1	           mov     cx,xpom 
    2412 01FC  E9 0400 R             1	           jmp     proc_obsl 
    2413 01FF  51                    1	           push    cx          ; nr prz
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-65


					erwania lub wyj?tku 
    2414 0200  B9 0049               1	           mov     cx,xpom 
    2415 0203  E9 0400 R             1	           jmp     proc_obsl 
    2416 0206  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2417 0207  B9 004A               1	           mov     cx,xpom 
    2418 020A  E9 0400 R             1	           jmp     proc_obsl 
    2419 020D  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2420 020E  B9 004B               1	           mov     cx,xpom 
    2421 0211  E9 0400 R             1	           jmp     proc_obsl 
    2422 0214  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2423 0215  B9 004C               1	           mov     cx,xpom 
    2424 0218  E9 0400 R             1	           jmp     proc_obsl 
    2425 021B  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2426 021C  B9 004D               1	           mov     cx,xpom 
    2427 021F  E9 0400 R             1	           jmp     proc_obsl 
    2428 0222  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2429 0223  B9 004E               1	           mov     cx,xpom 
    2430 0226  E9 0400 R             1	           jmp     proc_obsl 
    2431 0229  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2432 022A  B9 004F               1	           mov     cx,xpom 
    2433 022D  E9 0400 R             1	           jmp     proc_obsl 
    2434 0230  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2435 0231  B9 0050               1	           mov     cx,xpom 
    2436 0234  E9 0400 R             1	           jmp     proc_obsl 
    2437 0237  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2438 0238  B9 0051               1	           mov     cx,xpom 
    2439 023B  E9 0400 R             1	           jmp     proc_obsl 
    2440 023E  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2441 023F  B9 0052               1	           mov     cx,xpom 
    2442 0242  E9 0400 R             1	           jmp     proc_obsl 
    2443 0245  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2444 0246  B9 0053               1	           mov     cx,xpom 
    2445 0249  E9 0400 R             1	           jmp     proc_obsl 
    2446 024C  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2447 024D  B9 0054               1	           mov     cx,xpom 
    2448 0250  E9 0400 R             1	           jmp     proc_obsl 
    2449 0253  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2450 0254  B9 0055               1	           mov     cx,xpom 
    2451 0257  E9 0400 R             1	           jmp     proc_obsl 
    2452 025A  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2453 025B  B9 0056               1	           mov     cx,xpom 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-66


    2454 025E  E9 0400 R             1	           jmp     proc_obsl 
    2455 0261  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2456 0262  B9 0057               1	           mov     cx,xpom 
    2457 0265  E9 0400 R             1	           jmp     proc_obsl 
    2458 0268  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2459 0269  B9 0058               1	           mov     cx,xpom 
    2460 026C  E9 0400 R             1	           jmp     proc_obsl 
    2461 026F  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2462 0270  B9 0059               1	           mov     cx,xpom 
    2463 0273  E9 0400 R             1	           jmp     proc_obsl 
    2464 0276  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2465 0277  B9 005A               1	           mov     cx,xpom 
    2466 027A  E9 0400 R             1	           jmp     proc_obsl 
    2467 027D  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2468 027E  B9 005B               1	           mov     cx,xpom 
    2469 0281  E9 0400 R             1	           jmp     proc_obsl 
    2470 0284  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2471 0285  B9 005C               1	           mov     cx,xpom 
    2472 0288  E9 0400 R             1	           jmp     proc_obsl 
    2473 028B  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2474 028C  B9 005D               1	           mov     cx,xpom 
    2475 028F  E9 0400 R             1	           jmp     proc_obsl 
    2476 0292  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2477 0293  B9 005E               1	           mov     cx,xpom 
    2478 0296  E9 0400 R             1	           jmp     proc_obsl 
    2479 0299  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2480 029A  B9 005F               1	           mov     cx,xpom 
    2481 029D  E9 0400 R             1	           jmp     proc_obsl 
    2482 02A0  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2483 02A1  B9 0060               1	           mov     cx,xpom 
    2484 02A4  E9 0400 R             1	           jmp     proc_obsl 
    2485 02A7  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2486 02A8  B9 0061               1	           mov     cx,xpom 
    2487 02AB  E9 0400 R             1	           jmp     proc_obsl 
    2488 02AE  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2489 02AF  B9 0062               1	           mov     cx,xpom 
    2490 02B2  E9 0400 R             1	           jmp     proc_obsl 
    2491 02B5  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2492 02B6  B9 0063               1	           mov     cx,xpom 
    2493 02B9  E9 0400 R             1	           jmp     proc_obsl 
    2494 02BC  51                    1	           push    cx          ; nr prz
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-67


					erwania lub wyj?tku 
    2495 02BD  B9 0064               1	           mov     cx,xpom 
    2496 02C0  E9 0400 R             1	           jmp     proc_obsl 
    2497 02C3  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2498 02C4  B9 0065               1	           mov     cx,xpom 
    2499 02C7  E9 0400 R             1	           jmp     proc_obsl 
    2500 02CA  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2501 02CB  B9 0066               1	           mov     cx,xpom 
    2502 02CE  E9 0400 R             1	           jmp     proc_obsl 
    2503 02D1  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2504 02D2  B9 0067               1	           mov     cx,xpom 
    2505 02D5  E9 0400 R             1	           jmp     proc_obsl 
    2506 02D8  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2507 02D9  B9 0068               1	           mov     cx,xpom 
    2508 02DC  E9 0400 R             1	           jmp     proc_obsl 
    2509 02DF  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2510 02E0  B9 0069               1	           mov     cx,xpom 
    2511 02E3  E9 0400 R             1	           jmp     proc_obsl 
    2512 02E6  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2513 02E7  B9 006A               1	           mov     cx,xpom 
    2514 02EA  E9 0400 R             1	           jmp     proc_obsl 
    2515 02ED  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2516 02EE  B9 006B               1	           mov     cx,xpom 
    2517 02F1  E9 0400 R             1	           jmp     proc_obsl 
    2518 02F4  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2519 02F5  B9 006C               1	           mov     cx,xpom 
    2520 02F8  E9 0400 R             1	           jmp     proc_obsl 
    2521 02FB  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2522 02FC  B9 006D               1	           mov     cx,xpom 
    2523 02FF  E9 0400 R             1	           jmp     proc_obsl 
    2524 0302  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2525 0303  B9 006E               1	           mov     cx,xpom 
    2526 0306  E9 0400 R             1	           jmp     proc_obsl 
    2527 0309  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2528 030A  B9 006F               1	           mov     cx,xpom 
    2529 030D  E9 0400 R             1	           jmp     proc_obsl 
    2530 0310  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2531 0311  B9 0070               1	           mov     cx,xpom 
    2532 0314  E9 0400 R             1	           jmp     proc_obsl 
    2533 0317  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2534 0318  B9 0071               1	           mov     cx,xpom 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-68


    2535 031B  E9 0400 R             1	           jmp     proc_obsl 
    2536 031E  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2537 031F  B9 0072               1	           mov     cx,xpom 
    2538 0322  E9 0400 R             1	           jmp     proc_obsl 
    2539 0325  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2540 0326  B9 0073               1	           mov     cx,xpom 
    2541 0329  E9 0400 R             1	           jmp     proc_obsl 
    2542 032C  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2543 032D  B9 0074               1	           mov     cx,xpom 
    2544 0330  E9 0400 R             1	           jmp     proc_obsl 
    2545 0333  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2546 0334  B9 0075               1	           mov     cx,xpom 
    2547 0337  E9 0400 R             1	           jmp     proc_obsl 
    2548 033A  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2549 033B  B9 0076               1	           mov     cx,xpom 
    2550 033E  E9 0400 R             1	           jmp     proc_obsl 
    2551 0341  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2552 0342  B9 0077               1	           mov     cx,xpom 
    2553 0345  E9 0400 R             1	           jmp     proc_obsl 
    2554 0348  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2555 0349  B9 0078               1	           mov     cx,xpom 
    2556 034C  E9 0400 R             1	           jmp     proc_obsl 
    2557 034F  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2558 0350  B9 0079               1	           mov     cx,xpom 
    2559 0353  E9 0400 R             1	           jmp     proc_obsl 
    2560 0356  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2561 0357  B9 007A               1	           mov     cx,xpom 
    2562 035A  E9 0400 R             1	           jmp     proc_obsl 
    2563 035D  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2564 035E  B9 007B               1	           mov     cx,xpom 
    2565 0361  E9 0400 R             1	           jmp     proc_obsl 
    2566 0364  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2567 0365  B9 007C               1	           mov     cx,xpom 
    2568 0368  E9 0400 R             1	           jmp     proc_obsl 
    2569 036B  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2570 036C  B9 007D               1	           mov     cx,xpom 
    2571 036F  E9 0400 R             1	           jmp     proc_obsl 
    2572 0372  51                    1	           push    cx          ; nr prz
					erwania lub wyj?tku 
    2573 0373  B9 007E               1	           mov     cx,xpom 
    2574 0376  E9 0400 R             1	           jmp     proc_obsl 
    2575 0379  51                    1	           push    cx          ; nr prz
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-69


					erwania lub wyj?tku 
    2576 037A  B9 007F               1	           mov     cx,xpom 
    2577 037D  E9 0400 R             1	           jmp     proc_obsl 
    2578 0400				           ORG     $+128       ; wymusz
					a by nie wyst?powa?y JMP SHORT 
    2579				 
    2580 0400  FB			proc_obsl: sti 
    2581 0401  1E			           push    ds 
    2582 0402  06			           push    es 
    2583 0403  50			           push    ax 
    2584 0404  53			           push    bx 
    2585 0405  52			           push    dx 
    2586 0406  56			           push    si 
    2587				 
    2588 0407  B8 0018			           mov     ax, 3 * 8   ; selekt
					or pamieci ekranu 
    2589 040A  8E D8			           mov     ds,ax 
    2590				 
    2591				; wyst?pienie przerwania lub wyj?tku b?
					dzie sygnalizowane za pomoc? 
    2592				; znaku '*' wy?wietlanego w wierszu 15 
					na pozycji odpowiadaj?cej 
    2593				; numerowi przerwania lub wyj?tku 
    2594				;           mov     bx,160 * 15 
    2595				;           add     bx,cx       ; w CX 
					znajduje si? nr przerwania lub wyj?tku 
    2596				;           add     bx,cx       ; dodaw
					anie (BX) + 2 * (CX), bo znak 
    2597				                               ; zajmuj
					e w pami?ci ekranu dwa bajty 
    2598				;           mov     byte PTR ds:[bx],'*
					' 
    2599				;           inc     bx 
    2600				;           mov     byte PTR ds:[bx],17
					h  ; atrybut znaku 
    2601				 
    2602 040C  83 F9 21			           cmp     cx,33       ; czy pr
					zerwanie z klawiatury 
    2603 040F  0F 85 046E R		           jne     przeskocz_klaw 
    2604				 
    2605				; obsluga przerwania z klawiatury 
    2606 0413  E4 60			           in      al,60H      ; odczyt
					 kodu pozycji klawisza 
    2607 0415  32 E4			           xor     ah,ah       ; zerowa
					nie rejestru AH 
    2608 0417  50			           push    ax          ; przech
					owanie rejestru AX 
    2609 0418  E4 61			           in      al,61H      ; moze t
					o byc kod przeszukiwania 
    2610 041A  0C 82			           or      al,82H 
    2611 041C  E6 61			           out     61H,al 
    2612 041E  24 7F			           and     al,7FH 
    2613 0420  E6 61			           out     61H,al 
    2614 0422  58			           pop     ax          ; odtwor
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-70


					zenie rejestru AX 
    2615				 
    2616 0423  3C 37			           cmp     al, 55 
    2617 0425  0F 87 046E R		           ja      przeskocz_klaw  ; ni
					e sa obslugiwane klawisze o kodach 
    2618				                                   ; po
					zycji > 55 
    2619				 
    2620 0429  BB 0010			           mov     bx, 2 * 8       ; se
					lektor do segmentu 'nowe_dane' 
    2621 042C  8E DB			           mov     ds, bx 
    2622				 
    2623 042E  BE 00D8 R		           mov     si, OFFSET tabl_prze
					kA  ; tablica konwersji znakow 
    2624 0431  8A D8			           mov     bl, al 
    2625 0433  32 FF			           xor     bh, bh 
    2626				 
    2627 0435  8A 00			           mov     al, ds:[si+bx] 
    2628 0437  3C 00			           cmp     al, 0 
    2629 0439  0F 85 043F R		           jne     klaw2 
    2630 043D  B0 20			           mov     al, ' ' 
    2631				 
    2632				; wyswietlenie znaku na ekranie w przed
					ostatnim wierszu 
    2633 043F				klaw2: 
    2634 043F  BB 0018			           mov     bx, 3 * 8   ; selekt
					or pamieci ekranu 
    2635 0442  8E C3			           mov     es, bx 
    2636 0444  8B 1E 00D4 R		           mov     bx, ds:indeks_klaw 
    2637 0448  D1 E3			           shl     bx, 1 
    2638 044A  81 C3 0E64		           add     bx, 160 * 23 + 4   ;
					160 liczba bajtow w lini 23 wiersz 4 bo
					 znak zachety 
    2639 044E  26: 88 07		           mov     es:[bx], al 
    2640				 
    2641				; dopisanie znaku do bufora 
    2642 0451  FA			           cli 
    2643 0452  BB 0054 R		           mov     bx, OFFSET bufor_kla
					w 
    2644 0455  03 1E 00D4 R		           add     bx, ds:indeks_klaw 
    2645 0459  88 07			           mov     ds:[bx], al 
    2646 045B  FF 06 00D4 R		           inc     word PTR ds:indeks_k
					law 
    2647 045F  81 3E 00D4 R 0080	           cmp     ds:indeks_klaw, 128 
    2648 0465  0F 82 046D R		           jb      klaw3 
    2649 0469  FF 0E 00D4 R		           dec     word PTR ds:indeks_k
					law ; dekrementacja, gdy koniec bufora 
    2650 046D				klaw3: 
    2651 046D  FB			           sti 
    2652				 
    2653				;--------------------------------------
					------ 
    2654				;wyswietlenie czasu na ekranie 
    2655				 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-71


    2656				 
    2657 046E				przeskocz_klaw: 
    2658 046E  83 F9 20			           cmp     cx,32               
					; obsluga zegara 
    2659 0471  0F 85 05AB R		           jne     przeskocz_klaw2 
    2660 0475  FA			           cli 
    2661 0476  66| BB 00000000		           mov     ebx, 0 
    2662 047C  B0 00			           mov     al, 0       ; odczyt
					ywanie sekund 
    2663 047E  E6 70			           out     70h, al 
    2664 0480  EB 00			           jmp     $+2         ; opozni
					enie 
    2665 0482  E4 71			           in      al, 71h 
    2666 0484  0A D8			           or      bl, al 
    2667 0486  66| C1 CB 08		           ror     ebx, 8 
    2668 048A  B0 02			           mov     al, 2       ; odczyt
					ywanie minut 
    2669 048C  E6 70			           out     70h, al 
    2670 048E  EB 00			           jmp     $+2         ; opozni
					enie 
    2671 0490  E4 71			           in      al, 71h 
    2672 0492  0A D8			           or      bl, al 
    2673 0494  66| C1 CB 08		           ror     ebx, 8 
    2674 0498  B0 04			           mov     al, 4       ; odczyt
					ywanie godzin 
    2675 049A  E6 70			           out     70h, al 
    2676 049C  EB 00			           jmp     $+2         ; opozni
					enie 
    2677 049E  E4 71			           in      al, 71h 
    2678 04A0  0A D8			           or      bl, al 
    2679 04A2  66| C1 CB 08		           ror     ebx, 8 
    2680				 
    2681				; wyswietlanie na ekranie 
    2682 04A6  B8 0018			           mov     ax, 3 * 8   ; selekt
					or pamieci ekranu 
    2683 04A9  8E C0			           mov     es, ax 
    2684 04AB  66| C1 C3 04		           rol     ebx, 4 
    2685 04AF  80 C3 30			           add     bl, '0' 
    2686 04B2  26: 88 1E 0124		           mov     es:[292], bl 
    2687 04B7  32 DB			           xor     bl, bl 
    2688 04B9  66| C1 C3 04		           rol     ebx, 4 
    2689 04BD  80 C3 30			           add     bl, '0' 
    2690 04C0  26: 88 1E 0126		           mov     es:[294], bl 
    2691 04C5  B3 3A			           mov     bl, ':' 
    2692 04C7  26: 88 1E 0128		           mov     es:[296], bl 
    2693 04CC  32 DB			           xor     bl, bl 
    2694 04CE  66| C1 C3 04		           rol     ebx, 4 
    2695 04D2  80 C3 30			           add     bl, '0' 
    2696 04D5  26: 88 1E 012A		           mov     es:[298], bl 
    2697 04DA  32 DB			           xor     bl, bl 
    2698 04DC  66| C1 C3 04		           rol     ebx, 4 
    2699 04E0  80 C3 30			           add     bl, '0' 
    2700 04E3  26: 88 1E 012C		           mov     es:[300], bl 
    2701 04E8  B3 3A			           mov     bl, ':' 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-72


    2702 04EA  26: 88 1E 012E		           mov     es:[302], bl 
    2703 04EF  32 DB			           xor     bl, bl 
    2704 04F1  66| C1 C3 04		           rol     ebx, 4 
    2705 04F5  80 C3 30			           add     bl, '0' 
    2706 04F8  26: 88 1E 0130		           mov     es:[304], bl 
    2707 04FD  32 DB			           xor     bl, bl 
    2708 04FF  66| C1 C3 04		           rol     ebx, 4 
    2709 0503  80 C3 30			           add     bl, '0' 
    2710 0506  26: 88 1E 0132		           mov     es:[306], bl 
    2711				 
    2712				;; wyswietlanie daty 
    2713 050B  B8 0018			           mov     ax, 3 * 8   ; selekt
					or pamieci ekranu 
    2714 050E  8E C0			           mov     es, ax 
    2715				 
    2716 0510  33 C0			           xor ax,ax 
    2717 0512  66| BA 00000000		           mov edx,0 
    2718 0518  B0 07			           mov al,7    ; dzien miesiaca
					 
    2719 051A  E6 70			           out 70h,al 
    2720 051C  EB 00			           jmp $+2 
    2721 051E  E4 71			           in al,71h 
    2722 0520  0A D0			           or dl,al 
    2723 0522  66| C1 CA 04		           ror     edx, 4 
    2724 0526  80 C2 30			           add     dl, '0' 
    2725 0529  26: 88 16 00FC		           mov     es:[252], dl 
    2726 052E  32 D2			           xor     dl, dl 
    2727				     ; zerowanie 
    2728 0530  66| C1 C2 04		           rol   edx,4 
    2729 0534  80 C2 30			           add dl,'0' 
    2730 0537  26: 88 16 00FE		           mov es:[254],dl 
    2731 053C  66| 33 D2		           xor edx,edx 
    2732 053F  B2 2E			           mov     dl, '.' 
    2733 0541  26: 88 16 0100		           mov     es:[256], dl 
    2734 0546  66| BA 00000000		           mov edx,0 
    2735				 
    2736 054C  B0 08			           mov al,8   ; miesiac 
    2737 054E  E6 70			           out 70h,al 
    2738 0550  EB 00			           jmp $+2 
    2739 0552  E4 71			           in al,71h 
    2740 0554  0A D0			           or dl,al 
    2741 0556  66| C1 CA 04		           ror     edx, 4 
    2742 055A  80 C2 30			           add     dl, '0' 
    2743 055D  26: 88 16 0102		           mov     es:[258], dl 
    2744 0562  32 D2			           xor     dl, dl 
    2745				     ; zerowanie 
    2746 0564  66| C1 C2 04		           rol   edx,4 
    2747 0568  80 C2 30			           add dl,'0' 
    2748 056B  26: 88 16 0104		           mov es:[260],dl 
    2749 0570  66| 33 D2		           xor edx,edx 
    2750 0573  B2 2E			           mov     dl, '.' 
    2751 0575  26: 88 16 0106		           mov     es:[262], dl 
    2752 057A  66| BA 00000000		           mov edx,0 
    2753				 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Page     1-73


    2754				 
    2755 0580  B0 09			           mov al,9   ;rok 
    2756 0582  E6 70			           out 70h,al 
    2757 0584  EB 00			           jmp $+2 
    2758 0586  E4 71			           in al,71h 
    2759 0588  0A D0			           or dl,al 
    2760 058A  66| C1 CA 04		           ror edx,4 
    2761 058E  80 C2 30			           add dl,'0' 
    2762 0591  26: 88 16 0108		           mov es:[264],dl 
    2763 0596  32 D2			           xor dl,dl 
    2764 0598  66| C1 C2 04		           rol edx,4 
    2765 059C  80 C2 30			           add dl,'0' 
    2766 059F  26: 88 16 010A		           mov es:[266],dl 
    2767 05A4  66| BA 00000000		           mov edx,0 
    2768 05AA  FB			           sti 
    2769				 
    2770				 
    2771 05AB				przeskocz_klaw2: 
    2772				 
    2773				;--------------------------------------
					------------------------ 
    2774				 
    2775 05AB  B0 20			           mov     al, 20H 
    2776 05AD  E6 20			           out     20H, al    ; end of 
					interrupt (OCW2) 
    2777 05AF  5E			           pop     si 
    2778 05B0  5A			           pop     dx 
    2779 05B1  5B			           pop     bx 
    2780 05B2  58			           pop     ax 
    2781 05B3  07			           pop     es 
    2782 05B4  1F			           pop     ds 
    2783 05B5  59			           pop     cx 
    2784 05B6  CF			           iret 
    2785 05B7				obsl_int_end       LABEL near 
    2786 05B7				obsl_int   ENDS 
    2787				           END     pocz 
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

EKRAN  . . . . . . . . . . . . .  	16 Bit	0FA0	AT	B800	
NOWE_DANE  . . . . . . . . . . .  	16 Bit	0268	PARA	NONE	
NOWY_STOS  . . . . . . . . . . .  	16 Bit	1000	PARA	NONE	
OBSL_INT . . . . . . . . . . . .  	16 Bit	05B7	PARA	NONE	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	0D08	PARA	NONE	
ROZ_ZAK  . . . . . . . . . . . .  	16 Bit	004C	PARA	NONE	
SEGMENT_GDT  . . . . . . . . . .  	16 Bit	0058	PARA	NONE	
SEGMENT_IDT  . . . . . . . . . .  	16 Bit	0400	PARA	NONE	
STOS_RM  . . . . . . . . . . . .  	16 Bit	0200	PARA	STACK	

Symbols:            

                N a m e         	Type	 Value	 Attr

ATR  . . . . . . . . . . . . . .  	L BYTE	0267	NOWE_DANE

BASE_MEMORY  . . . . . . . . . .  	N PROC	0AFC	ROZKAZY	Length = 006F
BASE_MEMORYX . . . . . . . . . .  	L BYTE	01BF	NOWE_DANE
BASE_MEMORYY . . . . . . . . . .  	L BYTE	01C0	NOWE_DANE
BUFOR_KLAW . . . . . . . . . . .  	L BYTE	0054	NOWE_DANE	Length = 0080
BYL_ESC  . . . . . . . . . . . .  	L NEAR	08D9	ROZKAZY

CD_PRZYG . . . . . . . . . . . .  	L NEAR	071F	ROZKAZY
CLRSCR . . . . . . . . . . . . .  	N PROC	0ADA	ROZKAZY	Length = 0022
CR . . . . . . . . . . . . . . .  	NUMBER	000D	
CZASX  . . . . . . . . . . . . .  	L BYTE	01B0	NOWE_DANE
CZASY  . . . . . . . . . . . . .  	L BYTE	01B1	NOWE_DANE
CZYSC_EKRAN  . . . . . . . . . .  	N PROC	0704	ROZKAZY	Length = 001B
CZYTAJ_OD_NOWA . . . . . . . . .  	L NEAR	08B8	ROZKAZY

DALEJ_BM . . . . . . . . . . . .  	L NEAR	0B3C	ROZKAZY
DALEJ_BM2  . . . . . . . . . . .  	L NEAR	0B5F	ROZKAZY
DALEJ_DM2  . . . . . . . . . . .  	L NEAR	0C19	ROZKAZY
DALEJ_DM3  . . . . . . . . . . .  	L NEAR	0C24	ROZKAZY
DALEJ_EM . . . . . . . . . . . .  	L NEAR	0BAB	ROZKAZY
DALEJ_EM2  . . . . . . . . . . .  	L NEAR	0BCE	ROZKAZY
DALEJ_HM2  . . . . . . . . . . .  	L NEAR	0C51	ROZKAZY
DALEJ_HM3  . . . . . . . . . . .  	L NEAR	0C57	ROZKAZY
DALEJ_RM . . . . . . . . . . . .  	L NEAR	0737	ROZKAZY
DATAX  . . . . . . . . . . . . .  	L BYTE	01A8	NOWE_DANE
DATAY  . . . . . . . . . . . . .  	L BYTE	01A9	NOWE_DANE
DATA_MODEX . . . . . . . . . . .  	L BYTE	024F	NOWE_DANE
DATA_MODEY . . . . . . . . . . .  	L BYTE	0250	NOWE_DANE
DZIEL_BM . . . . . . . . . . . .  	L NEAR	0B29	ROZKAZY
DZIEL_EM . . . . . . . . . . . .  	L NEAR	0B98	ROZKAZY

EKRAN_END  . . . . . . . . . . .  	L BYTE	0FA0	EKRAN
EKRAN_X  . . . . . . . . . . . .  	L BYTE	00D6	NOWE_DANE
EKRAN_Y  . . . . . . . . . . . .  	L BYTE	00D7	NOWE_DANE
EXTD_MEMORY  . . . . . . . . . .  	N PROC	0B6B	ROZKAZY	Length = 006F
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Symbols-2


EXT_MEMORYX  . . . . . . . . . .  	L BYTE	01D2	NOWE_DANE
EXT_MEMORYY  . . . . . . . . . .  	L BYTE	01D3	NOWE_DANE

FIRSTFX  . . . . . . . . . . . .  	L BYTE	0235	NOWE_DANE
FIRSTFY  . . . . . . . . . . . .  	L BYTE	0236	NOWE_DANE
FIRST_FLOPPY . . . . . . . . . .  	L BYTE	01D4	NOWE_DANE
FLOPPY1  . . . . . . . . . . . .  	L BYTE	01F1	NOWE_DANE
FLOPPY2  . . . . . . . . . . . .  	L BYTE	01FA	NOWE_DANE
FLOPPY3  . . . . . . . . . . . .  	L BYTE	0206	NOWE_DANE
FLOPPY4  . . . . . . . . . . . .  	L BYTE	0212	NOWE_DANE
FLOPPY5  . . . . . . . . . . . .  	L BYTE	021D	NOWE_DANE
FLOPPY6  . . . . . . . . . . . .  	L BYTE	0229	NOWE_DANE
FLOPPY_POMOC . . . . . . . . . .  	N PROC	0CA8	ROZKAZY	Length = 0060
FLOPY_DRIVE_TYPE . . . . . . . .  	N PROC	0C5A	ROZKAZY	Length = 004E
FP1  . . . . . . . . . . . . . .  	L NEAR	0CD1	ROZKAZY
FP2  . . . . . . . . . . . . . .  	L NEAR	0CDA	ROZKAZY
FP3  . . . . . . . . . . . . . .  	L NEAR	0CE3	ROZKAZY
FP4  . . . . . . . . . . . . . .  	L NEAR	0CEC	ROZKAZY
FP5  . . . . . . . . . . . . . .  	L NEAR	0CF5	ROZKAZY
FP6  . . . . . . . . . . . . . .  	L NEAR	0CFE	ROZKAZY

GODZ1  . . . . . . . . . . . . .  	L BYTE	025C	NOWE_DANE
GODZ2  . . . . . . . . . . . . .  	L BYTE	0260	NOWE_DANE

HOUR_MODEX . . . . . . . . . . .  	L BYTE	0264	NOWE_DANE
HOUR_MODEY . . . . . . . . . . .  	L BYTE	0265	NOWE_DANE

INDEKS_KLAW  . . . . . . . . . .  	L WORD	00D4	NOWE_DANE
INFO1  . . . . . . . . . . . . .  	L BYTE	0113	NOWE_DANE
INFO2  . . . . . . . . . . . . .  	L BYTE	0143	NOWE_DANE

KLAW14 . . . . . . . . . . . . .  	L NEAR	08BD	ROZKAZY
KLAW2  . . . . . . . . . . . . .  	L NEAR	043F	OBSL_INT
KLAW3  . . . . . . . . . . . . .  	L NEAR	046D	OBSL_INT
KOM4 . . . . . . . . . . . . . .  	L BYTE	0000	NOWE_DANE
KOM5 . . . . . . . . . . . . . .  	L BYTE	003C	NOWE_DANE
KOMUNIKAT1 . . . . . . . . . . .  	L BYTE	0016	ROZKAZY
KOMUNIKAT2 . . . . . . . . . . .  	L BYTE	0618	ROZKAZY
KOMUNIKAT6 . . . . . . . . . . .  	L BYTE	0664	ROZKAZY
KONIECP  . . . . . . . . . . . .  	L NEAR	0AB3	ROZKAZY
KONIEC_FP  . . . . . . . . . . .  	L NEAR	0D07	ROZKAZY
KONIEC_WYSW  . . . . . . . . . .  	L NEAR	0921	ROZKAZY

LF . . . . . . . . . . . . . . .  	NUMBER	000A	

MONITOR  . . . . . . . . . . . .  	N PROC	095E	ROZKAZY	Length = 0059
MONITOR1 . . . . . . . . . . . .  	L BYTE	016D	NOWE_DANE
MONITOR2 . . . . . . . . . . . .  	L BYTE	0178	NOWE_DANE
MONITOR3 . . . . . . . . . . . .  	L BYTE	0182	NOWE_DANE
MONITOR4 . . . . . . . . . . . .  	L BYTE	018C	NOWE_DANE
MONITORX . . . . . . . . . . . .  	L BYTE	015D	NOWE_DANE
MONITORY . . . . . . . . . . . .  	L BYTE	015E	NOWE_DANE
MONITOR_DALEJ1 . . . . . . . . .  	L NEAR	0990	ROZKAZY
MONITOR_DALEJ2 . . . . . . . . .  	L NEAR	099F	ROZKAZY
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Symbols-3


MONITOR_DALEJ3 . . . . . . . . .  	L NEAR	09AE	ROZKAZY
MONITOR_KONIEC . . . . . . . . .  	L NEAR	09B4	ROZKAZY

NEXT . . . . . . . . . . . . . .  	L NEAR	0882	ROZKAZY
NOWE_DANE_END  . . . . . . . . .  	L BYTE	0268	NOWE_DANE
NOWY_STOS_END  . . . . . . . . .  	L BYTE	1000	NOWY_STOS

OBSL_INT_END . . . . . . . . . .  	L NEAR	05B7	OBSL_INT

PELNY_KONIEC . . . . . . . . . .  	L NEAR	06F8	ROZKAZY
PETLA_CZYSC  . . . . . . . . . .  	L NEAR	0AF2	ROZKAZY
POCZ . . . . . . . . . . . . . .  	L NEAR	06FD	ROZKAZY
POMOC  . . . . . . . . . . . . .  	L BYTE	0266	NOWE_DANE
POPRAWKA1  . . . . . . . . . . .  	L NEAR	0A8D	ROZKAZY
POPRAWKA2  . . . . . . . . . . .  	L NEAR	0AA0	ROZKAZY
PROC_OBSL  . . . . . . . . . . .  	L NEAR	0400	OBSL_INT
PRZELACZ_DO_RM . . . . . . . . .  	L NEAR	0000	ROZ_ZAK
PRZESKOCZ_KLAW . . . . . . . . .  	L NEAR	046E	OBSL_INT
PRZESKOCZ_KLAW2  . . . . . . . .  	L NEAR	05AB	OBSL_INT
PRZESTAW_8259  . . . . . . . . .  	N PROC	08E1	ROZKAZY	Length = 0011
PSTOS  . . . . . . . . . . . . .  	L WORD	0000	NOWY_STOS	Length = 0800
PTL_INIC_KLAW2 . . . . . . . . .  	L NEAR	0938	ROZKAZY
PTL_KLAW2  . . . . . . . . . . .  	L NEAR	08CA	ROZKAZY
PTL_KLAW3  . . . . . . . . . . .  	L NEAR	08C7	ROZKAZY
PTL_KOM  . . . . . . . . . . . .  	L NEAR	0911	ROZKAZY
PTL_WP . . . . . . . . . . . . .  	L NEAR	0950	ROZKAZY
PTT3 . . . . . . . . . . . . . .  	L NEAR	06DD	ROZKAZY

RAMKA  . . . . . . . . . . . . .  	N PROC	09B7	ROZKAZY	Length = 0123
RM_IDT . . . . . . . . . . . . .  	L QWORD	0010	ROZKAZY
ROZKAZY_END  . . . . . . . . . .  	L NEAR	0D08	ROZKAZY
RYSUJ1 . . . . . . . . . . . . .  	L NEAR	09D3	ROZKAZY
RYSUJ2 . . . . . . . . . . . . .  	L NEAR	09E1	ROZKAZY
RYSUJ3 . . . . . . . . . . . . .  	L NEAR	09F3	ROZKAZY
RYSUJ4 . . . . . . . . . . . . .  	L NEAR	0A1F	ROZKAZY
RYSUJ5 . . . . . . . . . . . . .  	L NEAR	0A34	ROZKAZY
RYSUJ6 . . . . . . . . . . . . .  	L NEAR	0A50	ROZKAZY
RYSUJ7 . . . . . . . . . . . . .  	L NEAR	0A5E	ROZKAZY
RYSUJ8 . . . . . . . . . . . . .  	L NEAR	0A70	ROZKAZY

SECONDFX . . . . . . . . . . . .  	L BYTE	0237	NOWE_DANE
SECONDFY . . . . . . . . . . . .  	L BYTE	0238	NOWE_DANE
SECOND_FLOPPY  . . . . . . . . .  	L BYTE	01E2	NOWE_DANE
SEGMENT_GDT_END  . . . . . . . .  	L BYTE	0058	SEGMENT_GDT
SEGMENT_IDT_END  . . . . . . . .  	L BYTE	0400	SEGMENT_IDT
STAT_REG_B . . . . . . . . . . .  	N PROC	0BDA	ROZKAZY	Length = 0080

TABL_PRZEKA  . . . . . . . . . .  	L BYTE	00D8	NOWE_DANE
TEKST1 . . . . . . . . . . . . .  	L BYTE	019D	NOWE_DANE
TEKST2 . . . . . . . . . . . . .  	L BYTE	01AA	NOWE_DANE
TEKST3 . . . . . . . . . . . . .  	L BYTE	01B2	NOWE_DANE
TEKST4 . . . . . . . . . . . . .  	L BYTE	01C1	NOWE_DANE
TEKST5 . . . . . . . . . . . . .  	L BYTE	015F	NOWE_DANE
TEKST6 . . . . . . . . . . . . .  	L BYTE	0239	NOWE_DANE
Microsoft (R) Macro Assembler Version 5.00                  1/17/22 18:38:05
                                                             Symbols-4


TEKST7 . . . . . . . . . . . . .  	L BYTE	0251	NOWE_DANE
TEKST8 . . . . . . . . . . . . .  	L BYTE	014F	NOWE_DANE
TRYB_PM  . . . . . . . . . . . .  	L NEAR	0888	ROZKAZY

WYSWIETL . . . . . . . . . . . .  	N PROC	08F2	ROZKAZY	Length = 0032
WYSWIETL_BM  . . . . . . . . . .  	L NEAR	0B5F	ROZKAZY
WYSWIETL_EM  . . . . . . . . . .  	L NEAR	0BCE	ROZKAZY

XPOM . . . . . . . . . . . . . .  	NUMBER	0080	

ZAW_GDTR . . . . . . . . . . . .  	L QWORD	0000	ROZKAZY
ZAW_IDTR . . . . . . . . . . . .  	L QWORD	0008	ROZKAZY
ZBCD . . . . . . . . . . . . . .  	L BYTE	024B	NOWE_DANE
ZBINARY  . . . . . . . . . . . .  	L BYTE	0244	NOWE_DANE
ZERUJ_BUFOR_KLAW . . . . . . . .  	N PROC	0924	ROZKAZY	Length = 003A

@FILENAME  . . . . . . . . . . .  	TEXT  PM11		


   1640 Source  Lines
   2922 Total   Lines
    150 Symbols

  50330 + 417062 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
